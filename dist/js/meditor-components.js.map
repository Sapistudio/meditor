{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///external \"jQuery\"","webpack:///external \"MEditor\"","webpack:///./src/components/meditor-component-photo.js","webpack:///./src/components/meditor-component-text.js","webpack:///./src/components/meditor-component-divider.js","webpack:///./src/components/meditor-component-email-button.js","webpack:///./src/components/meditor-component-email-image-caption.js"],"names":["root","factory","exports","module","require","define","amd","a","i","self","this","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","MEditor","components","init","contentArea","container","component","meditor","children","find","css","settingEnabled","settingTitle","initSettingForm","form","options","append","photoEdit","fileInput","next","on","e","preventDefault","trigger","file","files","test","type","reader","FileReader","addEventListener","img","getSettingComponent","attr","target","result","width","height","load","showSettingPanel","readAsDataURL","alert","checked","val","removeClass","addClass","inputWidth","inputHeight","newWidth","newHeight","Math","round","ratio","showSettingForm","inputAlign","inputResponsive","cbbStyle","panel","algin","hasClass","prop","$","instances","toolbarGroups","groups","title","allowedContent","bodyId","templates_replaceContent","enterMode","forceEnterMode","format_tags","removePlugins","removeButtons","minimumChangeMilliseconds","initCKEditor","callback","iframeWindow","CKEDITOR","ckeditorSrc","document","body","ckeditorScript","iframeDoc","createElement","src","onreadystatechange","disableAutoInline","onload","iframeHead","setTimeout","componentContent","onComponentChanged","onContainerChanged","onContentChanged","ckeditor","editor","inline","onComponentReady","getContent","id","getData","html","destroy","spectrum","color","showInput","preferredFormat","style","borderTopStyle","borderTopColor","toHex","borderTopWidth","divider","divider_inner","divider_outer","length","selected","slider","classes","ui-slider","max","min","step","align","button_container","button_block_inner","borderStyle","current_val","endsWith","substring","buttonAlign","caption_top","caption_bottom","caption_block_inner","caption_text_content_bottom","remove","image_table_clone","cloneNode","appendChild","caption_image_content_top","caption_image_content_bottom","caption_text_content","caption_image_content_top_clone_1","caption_text_content_clone_1","caption_text_content_clone","parentNode","caption_image_content_top_clone","className","caption_image_content_bottom_clone_1","caption_image_content_bottom_clone","each","$this","newrows","undefined","imageCountInComponent","captionPosition"],"mappings":"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","file":"js/meditor-components.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jQuery\"), require(\"MEditor\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jQuery\", \"MEditor\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"jQuery\"), require(\"MEditor\")) : factory(root[\"jQuery\"], root[\"MEditor\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","import $ from 'jquery';\nimport MEditor from 'meditor';\n\nMEditor.components['photo'] = {\n    init: function (contentArea, container, component, meditor) {\n        let componentContent = component.children('.meditor-component-content');\n        let img = componentContent.find('img');\n        \n        img.css('display', 'inline-block');\n    },\n    \n    settingEnabled: true,\n    \n    settingTitle: 'Photo Settings',\n    \n    initSettingForm: function (form, meditor) {\n        let self = this;\n        let options = meditor.options;\n        \n        form.append(\n            '<form class=\"form-horizontal\">' +\n            '   <div class=\"form-group\">' +\n            '       <div class=\"col-sm-12\">' +\n            '           <button type=\"button\" class=\"btn btn-block btn-primary\" id=\"photo-edit\">Change Photo</button>' +\n            '           <input type=\"file\" style=\"display: none\" />' +\n            '       </div>' +\n            '   </div>' +\n            '   <div class=\"form-group\">' +\n            '       <label for=\"photo-align\" class=\"col-sm-12\">Align</label>' +\n            '       <div class=\"col-sm-12\">' +\n            '           <select id=\"photo-align\" class=\"form-control\">' +\n            '               <option value=\"left\">Left</option>' +\n            '               <option value=\"center\">Center</option>' +\n            '               <option value=\"right\">Right</option>' +\n            '           </select>' +\n            '       </div>' +\n            '   </div>' +\n            '   <div class=\"form-group\">' +\n            '       <label for=\"photo-style\" class=\"col-sm-12\">Style</label>' +\n            '       <div class=\"col-sm-12\">' +\n            '           <select id=\"photo-style\" class=\"form-control\">' +\n            '               <option value=\"\">None</option>' +\n            '               <option value=\"img-rounded\">Rounded</option>' +\n            '               <option value=\"img-circle\">Circle</option>' +\n            '               <option value=\"img-thumbnail\">Thumbnail</option>' +\n            '           </select>' +\n            '       </div>' +\n            '   </div>' +\n            '   <div class=\"form-group\">' +\n            '       <label for=\"photo-responsive\" class=\"col-sm-12\">Responsive</label>' +\n            '       <div class=\"col-sm-12\">' +\n            '           <input type=\"checkbox\" id=\"photo-responsive\" />' +\n            '       </div>' +\n            '   </div>' +\n            '   <div class=\"form-group\">' +\n            '       <label for=\"photo-width\" class=\"col-sm-12\">Width</label>' +\n            '       <div class=\"col-sm-12\">' +\n            '           <input type=\"number\" id=\"photo-width\" class=\"form-control\" />' +\n            '       </div>' +\n            '   </div>' +\n            '   <div class=\"form-group\">' +\n            '       <label for=\"photo-height\" class=\"col-sm-12\">Height</label>' +\n            '       <div class=\"col-sm-12\">' +\n            '           <input type=\"number\" id=\"photo-height\" class=\"form-control\" />' +\n            '       </div>' +\n            '   </div>' +\n            '</form>'\n        );\n        \n        let photoEdit = form.find('#photo-edit');\n        let fileInput = photoEdit.next();\n        photoEdit.on('click', function (e) {\n            e.preventDefault();\n            \n            fileInput.trigger('click');\n        });\n        fileInput.on('change', function () {\n            let file = this.files[0];\n            if (/image/.test(file.type)) {\n                let reader = new FileReader();\n                \n                reader.addEventListener('load', function (e) {\n                    let img = meditor.getSettingComponent().find('img');\n                    img.attr('src', e.target.result);\n                    img.css({\n                        width: '',\n                        height: ''\n                    });\n                    img.load(function () {\n                        meditor.showSettingPanel(meditor.getSettingComponent(), options);\n                    });\n                });\n                \n                reader.readAsDataURL(this.files[0]);\n            } else {\n                alert('Your selected file is not photo!');\n            }\n        });\n        \n        let inputAlign = form.find('#photo-align');\n        inputAlign.on('change', function () {\n            let panel = meditor.getSettingComponent().find('.photo-panel');\n            panel.css('text-align', this.value);\n        });\n        \n        let inputResponsive = form.find('#photo-responsive');\n        inputResponsive.on('click', function () {\n            meditor.getSettingComponent().find('img')[this.checked ? 'addClass' : 'removeClass']('img-responsive');\n        });\n        \n        let cbbStyle = form.find('#photo-style');\n        cbbStyle.on('change', function () {\n            let img = meditor.getSettingComponent().find('img');\n            let val = this.value;\n            \n            img.removeClass('img-rounded img-circle img-thumbnail');\n            if (val) {\n                img.addClass(val);\n            }\n        });\n        \n        let inputWidth = form.find('#photo-width');\n        let inputHeight = form.find('#photo-height');\n        inputWidth.on('change', function () {\n            let img = meditor.getSettingComponent().find('img');\n            let newWidth = +this.value;\n            let newHeight = Math.round(newWidth / self.ratio);\n            \n            if (newWidth <= 0) {\n                newWidth = self.width;\n                newHeight = self.height;\n                this.value = newWidth;\n            }\n            \n            img.css({\n                'width': newWidth,\n                'height': newHeight\n            });\n            inputHeight.val(newHeight);\n        });\n        inputHeight.on('change', function () {\n            let img = meditor.getSettingComponent().find('img');\n            let newHeight = +this.value;\n            let newWidth = Math.round(newHeight * self.ratio);\n            \n            if (newHeight <= 0) {\n                newWidth = self.width;\n                newHeight = self.height;\n                this.value = newHeight;\n            }\n            \n            img.css({\n                'height': newHeight,\n                'width': newWidth\n            });\n            inputWidth.val(newWidth);\n        });\n    },\n    \n    showSettingForm: function (form, component, meditor) {\n        let self = this;\n        let inputAlign = form.find('#photo-align');\n        let inputResponsive = form.find('#photo-responsive');\n        let inputWidth = form.find('#photo-width');\n        let inputHeight = form.find('#photo-height');\n        let cbbStyle = form.find('#photo-style');\n        \n        let panel = component.find('.photo-panel');\n        let img = panel.find('img');\n        \n        let algin = panel.css('text-align');\n        if (algin !== 'right' || algin !== 'center') {\n            algin = 'left';\n        }\n        \n        if (img.hasClass('img-rounded')) {\n            cbbStyle.val('img-rounded');\n        } else if (img.hasClass('img-circle')) {\n            cbbStyle.val('img-circle');\n        } else if (img.hasClass('img-thumbnail')) {\n            cbbStyle.val('img-thumbnail');\n        } else {\n            cbbStyle.val('');\n        }\n        \n        inputAlign.val(algin);\n        inputResponsive.prop('checked', img.hasClass('img-responsive'));\n        inputWidth.val(img.width());\n        inputHeight.val(img.height());\n        \n        $('<img />').attr('src', img.attr('src')).load(function () {\n            self.ratio = this.width / this.height;\n            self.width = this.width;\n            self.height = this.height;\n        });\n    }\n};\n","import '../styles/meditor-component-text.less';\nimport MEditor from 'meditor';\nconst instances = {};\n\n// Text component\n// ---------------------------------------------------------------------\nMEditor.components['text'] = {\n    options: {\n        toolbarGroups: [\n            {name: 'document', groups: ['mode', 'document', 'doctools']},\n            {name: 'editing', groups: ['find', 'selection', 'spellchecker', 'editing']},\n            {name: 'basicstyles', groups: ['basicstyles', 'cleanup']},\n            {name: 'paragraph', groups: ['list', 'indent', 'blocks', 'align', 'bidi', 'paragraph']},\n            {name: 'links', groups: ['links']},\n            {name: 'insert', groups: ['insert']},\n            {name: 'clipboard', groups: ['clipboard', 'undo']},\n            {name: 'styles', groups: ['styles']},\n            {name: 'colors', groups: ['colors']},\n        ],\n        title: false,\n        allowedContent: true, // DISABLES Advanced Content Filter. This is so templates with classes: allowed through\n        bodyId: 'editor',\n        templates_replaceContent: false,\n        enterMode: 'P',\n        forceEnterMode: true,\n        format_tags: 'p;h1;h2;h3;h4;h5;h6',\n        removePlugins: 'table,magicline,tableselection,tabletools,div',\n        removeButtons: 'Save,NewPage,Preview,Print,Templates,PasteText,PasteFromWord,Find,Replace,SelectAll,Scayt,Form,HiddenField,ImageButton,Button,Select,Textarea,TextField,Radio,Checkbox,Outdent,Indent,Blockquote,CreateDiv,Language,Table,HorizontalRule,Smiley,SpecialChar,PageBreak,Iframe,Styles,BGColor,Maximize,About,ShowBlocks,BidiLtr,BidiRtl,Flash,Image,Subscript,Superscript,Anchor',\n        minimumChangeMilliseconds: 100\n    },\n    \n    initCKEditor: function (meditor, callback) {\n        if (meditor.iframeWindow.CKEDITOR) {\n            callback(meditor.iframeWindow.CKEDITOR);\n        } else {\n            let ckeditorSrc = $(document.body).find('[data-type=\"ckeditor-script\"]').attr('src');\n            let ckeditorScript = meditor.iframeDoc[0].createElement('script');\n            ckeditorScript.type = 'text/javascript';\n            ckeditorScript.src = ckeditorSrc;\n            ckeditorScript.onreadystatechange = function () {\n                meditor.iframeWindow.CKEDITOR.disableAutoInline = true;\n                callback(meditor.iframeWindow.CKEDITOR);\n            };\n            ckeditorScript.onload = function () {\n                meditor.iframeWindow.CKEDITOR.disableAutoInline = true;\n                callback(meditor.iframeWindow.CKEDITOR);\n            };\n            meditor.iframeHead.append(ckeditorScript);\n            \n            setTimeout(() => {\n                ckeditorScript.src = ckeditorSrc;\n            }, 500);\n        }\n    },\n    \n    init: function (contentArea, container, component, meditor) {\n        let self = this;\n        let options = meditor.options;\n        \n        let componentContent = component.children('.meditor-component-content');\n        componentContent.prop('contenteditable', true);\n        \n        componentContent.on('input', function (e) {\n            if (typeof options.onComponentChanged === 'function') {\n                options.onComponentChanged.call(contentArea, e, component);\n            }\n            \n            if (typeof options.onContainerChanged === 'function') {\n                options.onContainerChanged.call(contentArea, e, container);\n            }\n            \n            if (typeof options.onContentChanged === 'function') {\n                options.onContentChanged.call(meditor, e, contentArea);\n            }\n        });\n        \n        self.initCKEditor(meditor, function (ckeditor) {\n            let editor = ckeditor.inline(componentContent[0], self.options);\n            instances[componentContent.attr('id')] = editor;\n            editor.on('instanceReady', function () {\n                if (typeof options.onComponentReady === 'function') {\n                    options.onComponentReady.call(contentArea, component, editor);\n                }\n            });\n        });\n    },\n    \n    getContent: function (component, meditor) {\n        let componentContent = component.find('.meditor-component-content');\n        let id = componentContent.attr('id');\n        let editor = instances[id];\n        if (editor) {\n            return editor.getData();\n        } else {\n            return componentContent.html();\n        }\n    },\n    \n    destroy: function (component, meditor) {\n        let id = component.find('.meditor-component-content').attr('id');\n        instances[id] && instances[id].destroy();\n    }\n};\n","import $ from 'jquery';\nimport MEditor from 'meditor';\n\nMEditor.components['divider'] = {\n    init: function (contentArea, container, component, meditor) {\n        \n    },\n    \n    settingEnabled: true,\n    \n    settingTitle: 'Divider Settings',\n    \n    initSettingForm: function (form, meditor) {\n        form.append(`\n            <form class=\"form-horizontal\">\n                <div class=\"form-group\">\n                    <label for=\"padding-top\" class=\"col-sm-12\">Padding top (px)</label>\n                    <div class=\"col-sm-4\">\n                        <input type=\"text\" class=\"padding-top form-control\" />\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"padding-bottom\" class=\"col-sm-12\">Padding bottom (px)</label>\n                    <div class=\"col-sm-4\">\n                        <input type=\"text\" class=\"padding-bottom form-control\" />\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"border-top-style\" class=\"col-sm-12\">Border Top Style</label>\n                    <div class=\"col-sm-12\">\n                        <select id=\"border-top-style\" class=\"form-control\">\n                            <option value=\"none\">None</option>\n                            <option value=\"solid\">Solid</option>\n                            <option value=\"dashed\">Dashed</option>\n                            <option value=\"dotted\">Dotted</option>\n                            <option value=\"double\">Double</option>\n                            <option value=\"groove\">Groove</option>\n                            <option value=\"ridge\">Ridge</option>\n                            <option value=\"inset\">Inset</option>\n                            <option value=\"outset\">Outset</option>\n                        </select>\n                    </div>\n                </div>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"border-top-color\" class=\"col-sm-12\">Border Top Color</label>\n                    <div class=\"col-sm-4\">\n                        <input type=\"text\" id=\"colorpicker\" class=\"border-top-color form-control\"/>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"border-top-width\" class=\"col-sm-12\">Border Top Width (px)</label>\n                    <div class=\"col-sm-4\">\n                        <input type=\"string\" class=\"border-top-width form-control\" />\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"divider-background\" class=\"col-sm-12\">Background Color</label>\n                    <div class=\"col-sm-12\">\n                        <input type=\"text\" id=\"background-colorpicker\" class=\"divider-background form-control\" />\n                    </div>\n                </div>\n            </form>\n        `);\n\n        $(\"#colorpicker\").spectrum({\n            color: \"#f00\",\n            showInput: true,\n            preferredFormat: \"hex\"\n        });\n\n        $(\"#background-colorpicker\").spectrum({\n            color: \"#f00\",\n            showInput: true,\n            preferredFormat: \"hex\"\n        });\n        \n        let borderTopStyle = form.find('#border-top-style');\n        borderTopStyle.on('change', function() {\n            let divider = meditor.getSettingComponent().find('.mcnDividerContent');\n            divider[0].style.borderTopStyle = this.value;\n            if (this.value !== \"none\") {\n                $(\"#colorpicker\").spectrum(\"enable\");\n            } else {\n                $(\"#colorpicker\").spectrum(\"disable\");\n            }\n        });\n\n        let borderTopColor = form.find('.border-top-color');\n        borderTopColor.on('change', function(color) {\n            let divider = meditor.getSettingComponent().find('.mcnDividerContent');\n            divider[0].style.borderTopColor = \"#\"+$(\"#colorpicker\").spectrum(\"get\").toHex();\n        });\n\n        let borderTopWidth = form.find('.border-top-width');\n        borderTopWidth.on('change', function() {\n            let divider = meditor.getSettingComponent().find('.mcnDividerContent');\n            divider[0].style.borderTopWidth = this.value;\n        });\n\n        let dividerBackground = form.find('.divider-background');\n        dividerBackground.on('change', function() {\n            let divider = meditor.getSettingComponent().find('.mcnDividerBlock');\n            divider.css('background-color', \"#\"+$(\"#background-colorpicker\").spectrum(\"get\").toHex());\n        });\n\n        let dividerPaddingTop = form.find('.padding-top');\n        dividerPaddingTop.on('change', function() {\n            let divider = meditor.getSettingComponent().find('.mcnDividerBlockInner');\n            divider.css('padding-top', this.value);\n        });\n\n        let dividerPaddingBottom = form.find('.padding-bottom');\n        dividerPaddingBottom.on('change', function() {\n            let divider = meditor.getSettingComponent().find('.mcnDividerBlockInner');\n            divider.css('padding-bottom', this.value);\n        });\n\n    },\n    \n    showSettingForm: function (form, component, meditor) {\n        let divider = component.find('.mcnDividerContent');\n        let divider_inner = component.find('.mcnDividerBlockInner');\n        let divider_outer = component.find('.mcnDividerBlock');\n\n        let borderTopStyle = form.find('#border-top-style');\n\n        for ( var i = 0; i < borderTopStyle[0].options.length; i++ ) {\n            if (divider[0].style.borderTopStyle.length === 0) {\n                divider[0].style.borderTopStyle = \"none\";\n            }\n\n            if ( borderTopStyle[0].options[i].value === divider[0].style.borderTopStyle) {\n                borderTopStyle[0].options[i].selected = true;\n                break;\n            }\n        }\n        if (divider[0].style.borderTopStyle === \"none\") {\n            $(\"#colorpicker\").spectrum(\"disable\");\n        }\n        let borderTopColor = form.find('.border-top-color');\n        $(\"#colorpicker\").spectrum(\"set\", divider[0].style.borderTopColor);\n\n        let borderTopWidth = form.find('.border-top-width');\n        borderTopWidth.val(divider[0].style.borderTopWidth);\n\n        let paddingTop = form.find('.padding-top');\n        paddingTop.val(divider_inner.css('padding-top'));\n\n        let paddingBottom = form.find('.padding-bottom');\n        paddingBottom.val(divider_inner.css('padding-bottom'));\n\n        let dividerBackground = form.find('.divider-background');\n        $(\"#background-colorpicker\").spectrum(\"set\", divider_outer.css('background-color'));\n    }\n};\n","import $ from 'jquery';\nimport MEditor from 'meditor';\n\nconst instances = {};\n\nMEditor.components['email-button'] = {\n    options: {\n        toolbarGroups: [\n            {name: 'basicstyles', groups: ['basicstyles']},\n            {name: 'styles', groups: ['styles']},\n            {name: 'colors', groups: ['colors']},\n            {name: 'links', groups: ['links']},\n        ],\n        title: false,\n        allowedContent: true, // DISABLES Advanced Content Filter. This is so templates with classes: allowed through\n        bodyId: 'editor',\n        templates_replaceContent: false,\n        enterMode: 'P',\n        forceEnterMode: true,\n        format_tags: 'p;h1;h2;h3;h4;h5;h6',\n        removePlugins: 'table,magicline,tableselection,tabletools,div,contextmenu,liststyle',\n        removeButtons: 'Save,NewPage,Preview,Print,Templates,PasteText,PasteFromWord,Find,Replace,SelectAll,Scayt,Form,HiddenField,ImageButton,Button,Select,Textarea,TextField,Radio,Checkbox,Outdent,Indent,Blockquote,CreateDiv,Language,Table,HorizontalRule,Smiley,SpecialChar,PageBreak,Iframe,Styles,BGColor,Maximize,About,ShowBlocks,BidiLtr,BidiRtl,Flash,Image,Subscript,Superscript,Anchor',\n        minimumChangeMilliseconds: 100\n    },\n\n    init: function (contentArea, container, component, meditor) {\n        let self = this;\n        let options = meditor.options;\n        \n        let componentContent = component.children('.meditor-component-content');\n        componentContent.prop('contenteditable', true);\n        \n        componentContent.on('input', function (e) {\n            if (typeof options.onComponentChanged === 'function') {\n                options.onComponentChanged.call(contentArea, e, component);\n            }\n            \n            if (typeof options.onContainerChanged === 'function') {\n                options.onContainerChanged.call(contentArea, e, container);\n            }\n            \n            if (typeof options.onContentChanged === 'function') {\n                options.onContentChanged.call(meditor, e, contentArea);\n            }\n        });\n        \n        self.initCKEditor(meditor, function (ckeditor) {\n            let editor = ckeditor.inline(componentContent[0], self.options);\n            instances[componentContent.attr('id')] = editor;\n            editor.on('instanceReady', function () {\n                if (typeof options.onComponentReady === 'function') {\n                    options.onComponentReady.call(contentArea, component, editor);\n                }\n            });\n        });\n    },\n\n    initCKEditor: function (meditor, callback) {\n        if (meditor.iframeWindow.CKEDITOR) {\n            callback(meditor.iframeWindow.CKEDITOR);\n        } else {\n            let ckeditorSrc = $(document.body).find('[data-type=\"ckeditor-script\"]').attr('src');\n            let ckeditorScript = meditor.iframeDoc[0].createElement('script');\n            ckeditorScript.type = 'text/javascript';\n            ckeditorScript.src = ckeditorSrc;\n            ckeditorScript.onreadystatechange = function () {\n                meditor.iframeWindow.CKEDITOR.disableAutoInline = true;\n                callback(meditor.iframeWindow.CKEDITOR);\n            };\n            ckeditorScript.onload = function () {\n                meditor.iframeWindow.CKEDITOR.disableAutoInline = true;\n                callback(meditor.iframeWindow.CKEDITOR);\n            };\n            meditor.iframeHead.append(ckeditorScript);\n            \n            setTimeout(() => {\n                ckeditorScript.src = ckeditorSrc;\n            }, 500);\n        }\n    },\n    \n    settingEnabled: true,\n    \n    settingTitle: 'Button Settings',\n    \n    initSettingForm: function (form, meditor) {\n        form.append(`\n            <form class=\"form-horizontal\">\n                <div class=\"form-group\">\n                    <label for=\"button-border\" class=\"col-sm-12\">Border Style</label>\n                    <div class=\"col-sm-12\">\n                        <select id=\"border-style\" class=\"btn-border-style form-control\">\n                            <option value=\"none\">None</option>\n                            <option value=\"solid\">Solid</option>\n                            <option value=\"dashed\">Dashed</option>\n                            <option value=\"dotted\">Dotted</option>\n                            <option value=\"double\">Double</option>\n                            <option value=\"groove\">Groove</option>\n                            <option value=\"ridge\">Ridge</option>\n                            <option value=\"inset\">Inset</option>\n                            <option value=\"outset\">Outset</option>\n                        </select>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"button-border-background\" class=\"col-sm-12\">Background</label>\n                    <div class=\"col-sm-12\">\n                        <input type=\"text\" class=\"btn-background form-control\" id=\"background-color\" />\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"button-border-width\" class=\"col-sm-12\">Border Width</label>\n                    <div class=\"col-sm-4\">\n                        <input type=\"text\" class=\"btn-border-width form-control\" />\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"button-border-color\" class=\"col-sm-12\">Border Color</label>\n                    <div class=\"col-sm-12\">\n                        <input type=\"text\" id=\"border-color\" class=\"btn-border-color form-control\" />\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"button-align\" class=\"col-sm-12\">Align</label>\n                    <div class=\"col-sm-12\">\n                        <select id=\"btn-align\" class=\"btn-align form-control\">\n                            <option value=\"left\">Left</option>\n                            <option value=\"center\">Center</option>\n                            <option value=\"right\">Right</option>\n                        </select>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"button-border-radius\" class=\"col-sm-12\">Rounded Corner</label>\n                    <div class=\"col-sm-12\" style=\"margin: 1px;\">\n                        <div id=\"rounded-corners\" class=\"col-sm-10 rnd-crn\" style=\"margin-left: 10px;\"> </div>\n                    </div>\n                </div>\n            </form>\n        `);\n\n        $( function() {\n            $( \"#rounded-corners\" ).slider({\n                classes: {\n                    \"ui-slider\": \"highlight\"\n                },\n                max: 100,\n                min: 0,\n                step: 1\n            });\n        } );\n\n        \n        $(\"#border-color\").spectrum({\n            color: \"#f00\",\n            showInput: true,\n            preferredFormat: \"hex\"\n        });\n\n        $(\"#background-color\").spectrum({\n            color: \"#f00\",\n            showInput: true,\n            preferredFormat: \"hex\"\n        });\n        \n        let borderStyle = form.find('#border-style');\n        borderStyle.on('change', function() {\n            let button_content_container = meditor.getSettingComponent().find('.mcnButtonContentContainer');\n            button_content_container.css('border-style', this.value);\n            if (this.value !== \"none\") {\n                $(\"#border-color\").spectrum(\"enable\");\n            } else {\n                $(\"#border-color\").spectrum(\"disable\");\n            }\n        });\n\n        let buttonBackgroundColor = form.find('.btn-background');\n        buttonBackgroundColor.on('change', function() {\n            let button_content_container = meditor.getSettingComponent().find('.mcnButtonContentContainer');\n            button_content_container.css('background-color', \"#\"+$(\"#background-color\").spectrum(\"get\").toHex());\n        });\n\n\n        let roundedCorner = form.find('#rounded-corners');\n        roundedCorner.on('slide', function() {\n            let button_content_container = meditor.getSettingComponent().find('.mcnButtonContentContainer');\n            button_content_container.css('border-radius', $( \"#rounded-corners\" ).slider( \"values\", 0 ));\n        } );\n\n        let buttonAlign = form.find('.btn-align');\n        buttonAlign.on('change', function() {\n            let button_content_inner = meditor.getSettingComponent().find('.mcnButtonBlockInner');\n            button_content_inner[0].align = this.value;\n        });\n\n        let buttonBorderWidth = form.find('.btn-border-width');\n        buttonBorderWidth.on('change', function() {\n            let button_content_container = meditor.getSettingComponent().find('.mcnButtonContentContainer');\n            button_content_container.css('border-width', this.value);\n        });\n\n        let buttonBorderColor = form.find('.btn-border-color');\n        buttonBorderColor.on('change', function() {\n            let button_content_container = meditor.getSettingComponent().find('.mcnButtonContentContainer');\n            button_content_container.css('border-color', this.value);\n        });\n\n    },\n\n    getContent: function (component, meditor) {\n        let componentContent = component.find('.meditor-component-content');\n        let id = componentContent.attr('id');\n        let editor = instances[id];\n        if (editor) {\n            return editor.getData();\n        } else {\n            return componentContent.html();\n        }\n    },\n    \n    destroy: function (component, meditor) {\n        let id = component.find('.meditor-component-content').attr('id');\n        instances[id] && instances[id].destroy();\n    },\n    \n    showSettingForm: function (form, component, meditor) {\n        let button = component.find('.mcnButton');\n        let button_container = component.find('.mcnButtonContentContainer');\n        let button_block_inner = component.find('.mcnButtonBlockInner');\n        \n        let borderTopStyle = form.find('#border-style');\n\n        for ( var i = 0; i < borderTopStyle[0].options.length; i++ ) {\n            if (button_container[0].style.borderStyle.length === 0) {\n                button_container[0].style.borderStyle = \"none\";\n            }\n            if ( borderTopStyle[0].options[i].value === button_container[0].style.borderStyle) {\n                borderTopStyle[0].options[i].selected = true;\n                break;\n            }\n        }\n        $(\"#background-color\").spectrum(\"set\", button_container.css('background-color'));\n\n        //let buttonBorderRadius = form.find('.btn-border-radius');\n        //buttonBorderRadius.val(button_container.css('border-radius'));\n        let current_val = button_container.css('border-radius');\n        current_val = (''+current_val).endsWith(\"px\") ? current_val.substring(0, current_val.length - 2) : current_val;\n        $( \"#rounded-corners\" ).slider( \"value\", current_val);\n\n        let buttonBorderWidth = form.find('.btn-border-width');\n        buttonBorderWidth.val(button_container.css('border-width'));\n\n        if (button_container[0].style.borderStyle === \"none\") {\n            $(\"#border-color\").spectrum(\"disable\");\n        }\n        $(\"#border-color\").spectrum(\"set\", button_container.css('border-color'));\n\n        let buttonAlign = form.find('.btn-align');\n\n        for ( var i = 0; i < buttonAlign[0].options.length; i++ ) {\n            if ( buttonAlign[0].options[i].value === button_block_inner[0].align) {\n                buttonAlign[0].options[i].selected = true;\n                break;\n            }\n        }\n\n    }\n};\n","import MEditor from 'meditor';\nimport $ from 'jquery';\n\nconst instances = {};\n\nMEditor.components['email-image-caption'] = {\n    options: {\n        toolbarGroups: [\n            {name: 'document', groups: ['mode', 'document', 'doctools']},\n            {name: 'editing', groups: ['find', 'selection', 'spellchecker', 'editing']},\n            {name: 'basicstyles', groups: ['basicstyles', 'cleanup']},\n            {name: 'paragraph', groups: ['list', 'indent', 'blocks', 'align', 'bidi', 'paragraph']},\n            {name: 'links', groups: ['links']},\n            {name: 'insert', groups: ['insert']},\n            {name: 'clipboard', groups: ['clipboard', 'undo']},\n            {name: 'styles', groups: ['styles']},\n            {name: 'colors', groups: ['colors']},\n        ],\n        title: false,\n        allowedContent: true, // DISABLES Advanced Content Filter. This is so templates with classes: allowed through\n        bodyId: 'editor',\n        templates_replaceContent: false,\n        enterMode: 'P',\n        forceEnterMode: true,\n        format_tags: 'p;h1;h2;h3;h4;h5;h6',\n        removePlugins: 'table,magicline,tableselection,tabletools,div,contextmenu,liststyle',\n        removeButtons: 'Save,NewPage,Preview,Print,Templates,PasteText,PasteFromWord,Find,Replace,SelectAll,Scayt,Form,HiddenField,ImageButton,Button,Select,Textarea,TextField,Radio,Checkbox,Outdent,Indent,Blockquote,CreateDiv,Language,Table,HorizontalRule,Smiley,SpecialChar,PageBreak,Iframe,Styles,BGColor,Maximize,About,ShowBlocks,BidiLtr,BidiRtl,Flash,Image,Subscript,Superscript,Anchor',\n        minimumChangeMilliseconds: 100\n    },\n\n    initCKEditor: function (meditor, callback) {\n        if (meditor.iframeWindow.CKEDITOR) {\n            callback(meditor.iframeWindow.CKEDITOR);\n        } else {\n            let ckeditorSrc = $(document.body).find('[data-type=\"ckeditor-script\"]').attr('src');\n            let ckeditorScript = meditor.iframeDoc[0].createElement('script');\n            ckeditorScript.type = 'text/javascript';\n            ckeditorScript.src = ckeditorSrc;\n            ckeditorScript.onreadystatechange = function () {\n                meditor.iframeWindow.CKEDITOR.disableAutoInline = true;\n                callback(meditor.iframeWindow.CKEDITOR);\n            };\n            ckeditorScript.onload = function () {\n                meditor.iframeWindow.CKEDITOR.disableAutoInline = true;\n                callback(meditor.iframeWindow.CKEDITOR);\n            };\n            meditor.iframeHead.append(ckeditorScript);\n            \n            setTimeout(() => {\n                ckeditorScript.src = ckeditorSrc;\n            }, 500);\n        }\n    },\n\n    init: function (contentArea, container, component, meditor) {\n        let self = this;\n        let options = meditor.options;\n        \n        let componentContent = component.children('.meditor-component-content');\n        componentContent.prop('contenteditable', true);\n        \n        componentContent.on('input', function (e) {\n            if (typeof options.onComponentChanged === 'function') {\n                options.onComponentChanged.call(contentArea, e, component);\n            }\n            \n            if (typeof options.onContainerChanged === 'function') {\n                options.onContainerChanged.call(contentArea, e, container);\n            }\n            \n            if (typeof options.onContentChanged === 'function') {\n                options.onContentChanged.call(meditor, e, contentArea);\n            }\n        });\n        \n        self.initCKEditor(meditor, function (ckeditor) {\n            let editor = ckeditor.inline(componentContent[0], self.options);\n            instances[componentContent.attr('id')] = editor;\n            editor.on('instanceReady', function () {\n                if (typeof options.onComponentReady === 'function') {\n                    options.onComponentReady.call(contentArea, component, editor);\n                }\n            });\n        });\n    },\n    \n    settingEnabled: true,\n    \n    settingTitle: 'Image + Caption Settings',\n    \n    initSettingForm: function (form, meditor) {\n        form.append(`\n            <form class=\"form-horizontal\">\n                <div class=\"form-group\">\n                    <label for=\"caption-position\" class=\"col-sm-12\">Caption Position</label>\n                    <div class=\"col-sm-12\">\n                        <input type=\"text\" class=\"caption-position form-control\" />\n                    </div>\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"caption-position\" class=\"col-sm-12\">Number of Images</label>\n                    <div class=\"col-sm-12\">\n                        <input type=\"text\" class=\"image-count form-control\" />\n                    </div>\n                </div>\n            </form>\n        `);\n        \n        let imageCount = form.find('.image-count');\n        imageCount.on('change', function() { \n            let caption_top = meditor.getSettingComponent().find('.mcnCaptionTopContent');\n            let caption_bottom = meditor.getSettingComponent().find('.mcnCaptionBottomContent');\n            let caption_block_inner = meditor.getSettingComponent().find('.mcnCaptionBlockInner');\n            let caption_image_content_top = meditor.getSettingComponent().find('.mcnCaptionTopImageContent');\n            let caption_image_content_bottom = meditor.getSettingComponent().find('.mcnCaptionBottomImageContent');\n            let caption_text_content_bottom = meditor.getSettingComponent().find('.mcnTextContent');\n\n            if (caption_block_inner[0].children.length == 2 && this.value == 1) {\n                // delete one table inside \n                while(caption_block_inner[0].children.length > 1) {\n                    caption_block_inner[0].children[caption_block_inner[0].children.length - 1].remove();\n                }\n                caption_top = meditor.getSettingComponent().find('.mcnCaptionTopContent');\n                caption_bottom = meditor.getSettingComponent().find('.mcnCaptionBottomContent');\n                if (caption_bottom[0]) {\n                    caption_bottom[0].width = 564;\n                }\n                if (caption_top[0]) {\n                    caption_top[0].width = 564;\n                }\n                caption_text_content_bottom[0].width = 564;\n            } else if (caption_block_inner[0].children.length == 1 && this.value == 2) {\n                // add one table inside\n                let image_table_clone = caption_block_inner[0].children[0].cloneNode(true);\n                caption_block_inner[0].appendChild(image_table_clone);\n\n                for (let i=0; i<caption_block_inner[0].children.length; i++) {\n                    caption_block_inner[0].children[i].width = \"282\";\n                }\n                caption_block_inner[0].children[0].align = \"left\";\n                if (caption_block_inner[0].children.length > 1) {\n                    caption_block_inner[0].children[1].align = \"right\";\n                }\n            }\n        });\n\n        let captionPosition = form.find('.caption-position');\n        captionPosition.on('change', function() {\n            let caption_top = meditor.getSettingComponent().find('.mcnCaptionTopContent');\n            let caption_image_content_top = meditor.getSettingComponent().find('.mcnCaptionTopImageContent');\n            let caption_image_content_bottom = meditor.getSettingComponent().find('.mcnCaptionBottomImageContent');\n            let caption_text_content = meditor.getSettingComponent().find('.mcnTextContent');\n            let caption_block_inner = meditor.getSettingComponent().find('.mcnCaptionBlockInner');\n            let caption_bottom = meditor.getSettingComponent().find('.mcnCaptionBottomContent');\n\n            if (this.value === \"Bottom\") {\n                // clone image and text nodes\n                let caption_text_content_clone = meditor.getSettingComponent().find('.mcnTextContent')[0].parentNode.cloneNode(true);\n                let caption_image_content_top_clone = meditor.getSettingComponent().find('.mcnCaptionTopImageContent')[0].parentNode.cloneNode(true); \n                let caption_image_content_top_clone_1,caption_text_content_clone_1;\n\n                if (meditor.getSettingComponent().find('.mcnTextContent').length > 1) {\n                    caption_text_content_clone_1 = meditor.getSettingComponent().find('.mcnTextContent')[1].parentNode.cloneNode(true);\n                }\n                if (meditor.getSettingComponent().find('.mcnCaptionTopImageContent').length > 1) {\n                    caption_image_content_top_clone_1 = meditor.getSettingComponent().find('.mcnCaptionTopImageContent')[1].parentNode.cloneNode(true); \n                }\n                for (let i=0; i<caption_top.length; i++) {\n                    while (caption_top[i].children.length > 0) {\n                        // delete image and text nodes\n                        caption_image_content_top[0].parentNode.remove();\n                        caption_text_content[0].parentNode.remove();\n                        if (caption_top[i].children.length > 0) {\n                            caption_top[i].children[0].remove();\n                        }\n                    }\n                }\n         \n                // insert image first then text node\n                caption_top[0].appendChild(caption_image_content_top_clone);\n                caption_top[0].appendChild(caption_text_content_clone);\n                if (caption_image_content_top_clone_1) {\n                    caption_top[1].appendChild(caption_image_content_top_clone_1);\n                }\n                if (caption_text_content_clone_1) {\n                    caption_top[1].appendChild(caption_text_content_clone_1);\n                }\n\n                for (let i=0; i<caption_top.length; i++) {\n                    // swap class names\n                    caption_top[i].className = \"mcnCaptionBottomContent\";\n                    caption_image_content_top = meditor.getSettingComponent().find('.mcnCaptionTopImageContent');\n                    caption_image_content_top[0].className = \"mcnCaptionBottomImageContent\";\n                }\n\n                caption_block_inner[0].children[0].align = \"left\";\n                if (caption_block_inner[0].children.length > 1) {\n                    caption_block_inner[0].children[1].align = \"right\";\n                }\n                caption_top = meditor.getSettingComponent().find('.mcnCaptionTopContent');\n                caption_bottom = meditor.getSettingComponent().find('.mcnCaptionBottomContent');\n\n            } else if (this.value === \"Top\") {\n\n                // clone image and text nodes\n                let caption_text_content_clone = meditor.getSettingComponent().find('.mcnTextContent')[0].parentNode.cloneNode(true);\n                let caption_image_content_bottom_clone = meditor.getSettingComponent().find('.mcnCaptionBottomImageContent')[0].parentNode.cloneNode(true); \n                let caption_text_content_clone_1, caption_image_content_bottom_clone_1;\n                if (meditor.getSettingComponent().find('.mcnTextContent').length > 1) {\n                    caption_text_content_clone_1 = meditor.getSettingComponent().find('.mcnTextContent')[1].parentNode.cloneNode(true);\n                }\n                if (meditor.getSettingComponent().find('.mcnCaptionBottomImageContent').length > 1) {\n                    caption_image_content_bottom_clone_1 = meditor.getSettingComponent().find('.mcnCaptionBottomImageContent')[1].parentNode.cloneNode(true); \n                }\n                for (let i=0; i<caption_bottom.length; i++) {\n                    while (caption_bottom[i].children.length > 0) {\n                        // delete image and text nodes\n                        caption_image_content_bottom[0].parentNode.remove();\n                        caption_text_content[0].parentNode.remove();\n                        if (caption_bottom[i].children.length > 0) {\n                            caption_bottom[i].children[0].remove();\n                        }\n                    }\n                }\n            \n                // insert image first then text node\n                caption_bottom[0].appendChild(caption_text_content_clone);\n                caption_bottom[0].appendChild(caption_image_content_bottom_clone);\n                if (caption_text_content_clone_1) {\n                    caption_bottom[1].appendChild(caption_text_content_clone_1);\n                }\n                if (caption_image_content_bottom_clone_1) {\n                    caption_bottom[1].appendChild(caption_image_content_bottom_clone_1);\n                }\n                \n                for (let i=0; i<caption_bottom.length; i++) {\n                    // swap class names\n                    caption_bottom[i].className = \"mcnCaptionTopContent\";\n                    caption_image_content_top = meditor.getSettingComponent().find('.mcnCaptionBottomImageContent');\n                    caption_image_content_top[0].className = \"mcnCaptionTopImageContent\";\n                }\n\n                caption_block_inner[0].children[0].align = \"left\";\n                if (caption_block_inner[0].children.length > 1) {\n                    caption_block_inner[0].children[1].align = \"right\";\n                }\n                caption_top = meditor.getSettingComponent().find('.mcnCaptionTopContent');\n                caption_bottom = meditor.getSettingComponent().find('.mcnCaptionBottomContent');\n            } else if (this.value === \"Left\") {\n                //mcnCaptionBlock\n                $(\".mcnCaptionTopContent\").each(function() {\n                    var $this = $(this);\n                    var newrows = [];\n                    $this.find(\"tr\").each(function(){\n                        var i = 0;\n                        $(this).find(\"td\").each(function(){\n                            i++;\n                            if(newrows[i] === undefined) { newrows[i] = $(\"<tr></tr>\"); }\n                            newrows[i].append($(this));\n                        });\n                    });\n                    $this.find(\"tr\").remove();\n                    $.each(newrows, function(){\n                        $this.append(this);\n                    });\n                });\n\n                $(\".mcnCaptionBottomContent\").each(function() {\n                    var $this = $(this);\n                    var newrows = [];\n                    $this.find(\"tr\").each(function(){\n                        var i = 0;\n                        $(this).find(\"td\").each(function(){\n                            i++;\n                            if(newrows[i] === undefined) { newrows[i] = $(\"<tr></tr>\"); }\n                            newrows[i].append($(this));\n                        });\n                    });\n                    $this.find(\"tr\").remove();\n                    $.each(newrows, function(){\n                        $this.append(this);\n                    });\n                });\n            }\n        });\n\n    },\n    \n    showSettingForm: function (form, component, meditor) {\n        let caption_top = component.find('.mcnCaptionTopContent');\n        let caption_bottom = component.find('.mcnCaptionBottomContent');\n        \n        let imageCountInComponent = 0;\n\n        let captionPosition = form.find('.caption-position');\n        if (caption_top.length > 0) {\n            imageCountInComponent = caption_top.length;\n            captionPosition.val(\"Top\");\n        } else if (caption_bottom.length > 0) {\n            imageCountInComponent = caption_bottom.length;\n            captionPosition.val(\"Bottom\");\n        }\n\n        let imageCount = form.find('.image-count');\n        imageCount.val(imageCountInComponent);\n\n    },\n\n    getContent: function (component, meditor) {\n        let componentContent = component.find('.meditor-component-content');\n        let id = componentContent.attr('id');\n        let editor = instances[id];\n        if (editor) {\n            return editor.getData();\n        } else {\n            return componentContent.html();\n        }\n    },\n    \n    destroy: function (component, meditor) {\n        let id = component.find('.meditor-component-content').attr('id');\n        instances[id] && instances[id].destroy();\n    }\n};\n"],"sourceRoot":""}