(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("jQuery"), require("MEditor"));
	else if(typeof define === 'function' && define.amd)
		define(["jQuery", "MEditor"], factory);
	else {
		var a = typeof exports === 'object' ? factory(require("jQuery"), require("MEditor")) : factory(root["jQuery"], root["MEditor"]);
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_jquery__, __WEBPACK_EXTERNAL_MODULE_meditor__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/components/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/components/index.js":
/*!*********************************!*\
  !*** ./src/components/index.js ***!
  \*********************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _meditor_component_photo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./meditor-component-photo.js */ \"./src/components/meditor-component-photo.js\");\n/* harmony import */ var _meditor_component_text_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./meditor-component-text.js */ \"./src/components/meditor-component-text.js\");\n/* harmony import */ var _meditor_component_divider_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./meditor-component-divider.js */ \"./src/components/meditor-component-divider.js\");\n/* harmony import */ var _meditor_component_email_button_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./meditor-component-email-button.js */ \"./src/components/meditor-component-email-button.js\");\n/* harmony import */ var _meditor_component_email_image_caption_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./meditor-component-email-image-caption.js */ \"./src/components/meditor-component-email-image-caption.js\");\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9pbmRleC5qcz8yYWY5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRUE7QUFFQTtBQUVBIiwiZmlsZSI6Ii4vc3JjL2NvbXBvbmVudHMvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJy4vbWVkaXRvci1jb21wb25lbnQtcGhvdG8uanMnO1xuXG5pbXBvcnQgJy4vbWVkaXRvci1jb21wb25lbnQtdGV4dC5qcyc7XG5cbmltcG9ydCAnLi9tZWRpdG9yLWNvbXBvbmVudC1kaXZpZGVyLmpzJztcblxuaW1wb3J0ICcuL21lZGl0b3ItY29tcG9uZW50LWVtYWlsLWJ1dHRvbi5qcyc7XG5cbmltcG9ydCAnLi9tZWRpdG9yLWNvbXBvbmVudC1lbWFpbC1pbWFnZS1jYXB0aW9uLmpzJztcblxuXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/components/index.js\n");

/***/ }),

/***/ "./src/components/meditor-component-divider.js":
/*!*****************************************************!*\
  !*** ./src/components/meditor-component-divider.js ***!
  \*****************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var meditor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! meditor */ \"meditor\");\n/* harmony import */ var meditor__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(meditor__WEBPACK_IMPORTED_MODULE_1__);\n\n\nmeditor__WEBPACK_IMPORTED_MODULE_1___default.a.components['divider'] = {\n  init: function init(contentArea, container, component, meditor) {},\n  settingEnabled: true,\n  settingTitle: 'Divider Settings',\n  initSettingForm: function initSettingForm(form, meditor) {\n    form.append(\"\\n            <form class=\\\"form-horizontal\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"padding-top\\\" class=\\\"col-sm-12\\\">Padding top (px)</label>\\n                    <div class=\\\"col-sm-4\\\">\\n                        <input type=\\\"text\\\" class=\\\"padding-top form-control\\\" />\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"padding-bottom\\\" class=\\\"col-sm-12\\\">Padding bottom (px)</label>\\n                    <div class=\\\"col-sm-4\\\">\\n                        <input type=\\\"text\\\" class=\\\"padding-bottom form-control\\\" />\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"border-top-style\\\" class=\\\"col-sm-12\\\">Border Top Style</label>\\n                    <div class=\\\"col-sm-12\\\">\\n                        <select id=\\\"border-top-style\\\" class=\\\"form-control\\\">\\n                            <option value=\\\"none\\\">None</option>\\n                            <option value=\\\"solid\\\">Solid</option>\\n                            <option value=\\\"dashed\\\">Dashed</option>\\n                            <option value=\\\"dotted\\\">Dotted</option>\\n                            <option value=\\\"double\\\">Double</option>\\n                            <option value=\\\"groove\\\">Groove</option>\\n                            <option value=\\\"ridge\\\">Ridge</option>\\n                            <option value=\\\"inset\\\">Inset</option>\\n                            <option value=\\\"outset\\\">Outset</option>\\n                        </select>\\n                    </div>\\n                </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"border-top-color\\\" class=\\\"col-sm-12\\\">Border Top Color</label>\\n                    <div class=\\\"col-sm-4\\\">\\n                        <input type=\\\"text\\\" id=\\\"colorpicker\\\" class=\\\"border-top-color form-control\\\"/>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"border-top-width\\\" class=\\\"col-sm-12\\\">Border Top Width (px)</label>\\n                    <div class=\\\"col-sm-4\\\">\\n                        <input type=\\\"string\\\" class=\\\"border-top-width form-control\\\" />\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"divider-background\\\" class=\\\"col-sm-12\\\">Background Color</label>\\n                    <div class=\\\"col-sm-12\\\">\\n                        <input type=\\\"text\\\" id=\\\"background-colorpicker\\\" class=\\\"divider-background form-control\\\" />\\n                    </div>\\n                </div>\\n            </form>\\n        \");\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"#colorpicker\").spectrum({\n      color: \"#f00\",\n      showInput: true,\n      preferredFormat: \"hex\"\n    });\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"#background-colorpicker\").spectrum({\n      color: \"#f00\",\n      showInput: true,\n      preferredFormat: \"hex\"\n    });\n    var borderTopStyle = form.find('#border-top-style');\n    borderTopStyle.on('change', function () {\n      var divider = meditor.getSettingComponent().find('.mcnDividerContent');\n      divider[0].style.borderTopStyle = this.value;\n\n      if (this.value !== \"none\") {\n        jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"#colorpicker\").spectrum(\"enable\");\n      } else {\n        jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"#colorpicker\").spectrum(\"disable\");\n      }\n    });\n    var borderTopColor = form.find('.border-top-color');\n    borderTopColor.on('change', function (color) {\n      var divider = meditor.getSettingComponent().find('.mcnDividerContent');\n      divider[0].style.borderTopColor = \"#\" + jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"#colorpicker\").spectrum(\"get\").toHex();\n    });\n    var borderTopWidth = form.find('.border-top-width');\n    borderTopWidth.on('change', function () {\n      var divider = meditor.getSettingComponent().find('.mcnDividerContent');\n      divider[0].style.borderTopWidth = this.value;\n    });\n    var dividerBackground = form.find('.divider-background');\n    dividerBackground.on('change', function () {\n      var divider = meditor.getSettingComponent().find('.mcnDividerBlock');\n      divider.css('background-color', \"#\" + jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"#background-colorpicker\").spectrum(\"get\").toHex());\n    });\n    var dividerPaddingTop = form.find('.padding-top');\n    dividerPaddingTop.on('change', function () {\n      var divider = meditor.getSettingComponent().find('.mcnDividerBlockInner');\n      divider.css('padding-top', this.value);\n    });\n    var dividerPaddingBottom = form.find('.padding-bottom');\n    dividerPaddingBottom.on('change', function () {\n      var divider = meditor.getSettingComponent().find('.mcnDividerBlockInner');\n      divider.css('padding-bottom', this.value);\n    });\n  },\n  showSettingForm: function showSettingForm(form, component, meditor) {\n    var divider = component.find('.mcnDividerContent');\n    var divider_inner = component.find('.mcnDividerBlockInner');\n    var divider_outer = component.find('.mcnDividerBlock');\n    var borderTopStyle = form.find('#border-top-style');\n\n    for (var i = 0; i < borderTopStyle[0].options.length; i++) {\n      if (divider[0].style.borderTopStyle.length === 0) {\n        divider[0].style.borderTopStyle = \"none\";\n      }\n\n      if (borderTopStyle[0].options[i].value === divider[0].style.borderTopStyle) {\n        borderTopStyle[0].options[i].selected = true;\n        break;\n      }\n    }\n\n    if (divider[0].style.borderTopStyle === \"none\") {\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"#colorpicker\").spectrum(\"disable\");\n    }\n\n    var borderTopColor = form.find('.border-top-color');\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"#colorpicker\").spectrum(\"set\", divider[0].style.borderTopColor);\n    var borderTopWidth = form.find('.border-top-width');\n    borderTopWidth.val(divider[0].style.borderTopWidth);\n    var paddingTop = form.find('.padding-top');\n    paddingTop.val(divider_inner.css('padding-top'));\n    var paddingBottom = form.find('.padding-bottom');\n    paddingBottom.val(divider_inner.css('padding-bottom'));\n    var dividerBackground = form.find('.divider-background');\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"#background-colorpicker\").spectrum(\"set\", divider_outer.css('background-color'));\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/meditor-component-divider.js\n");

/***/ }),

/***/ "./src/components/meditor-component-email-button.js":
/*!**********************************************************!*\
  !*** ./src/components/meditor-component-email-button.js ***!
  \**********************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var meditor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! meditor */ \"meditor\");\n/* harmony import */ var meditor__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(meditor__WEBPACK_IMPORTED_MODULE_1__);\n\n\nvar instances = {};\nmeditor__WEBPACK_IMPORTED_MODULE_1___default.a.components['email-button'] = {\n  options: {\n    toolbarGroups: [{\n      name: 'basicstyles',\n      groups: ['basicstyles']\n    }, {\n      name: 'styles',\n      groups: ['styles']\n    }, {\n      name: 'colors',\n      groups: ['colors']\n    }, {\n      name: 'links',\n      groups: ['links']\n    }],\n    title: false,\n    allowedContent: true,\n    // DISABLES Advanced Content Filter. This is so templates with classes: allowed through\n    bodyId: 'editor',\n    templates_replaceContent: false,\n    enterMode: 'P',\n    forceEnterMode: true,\n    format_tags: 'p;h1;h2;h3;h4;h5;h6',\n    removePlugins: 'table,magicline,tableselection,tabletools,div,contextmenu,liststyle',\n    removeButtons: 'Save,NewPage,Preview,Print,Templates,PasteText,PasteFromWord,Find,Replace,SelectAll,Scayt,Form,HiddenField,ImageButton,Button,Select,Textarea,TextField,Radio,Checkbox,Outdent,Indent,Blockquote,CreateDiv,Language,Table,HorizontalRule,Smiley,SpecialChar,PageBreak,Iframe,Styles,BGColor,Maximize,About,ShowBlocks,BidiLtr,BidiRtl,Flash,Image,Subscript,Superscript,Anchor',\n    minimumChangeMilliseconds: 100\n  },\n  init: function init(contentArea, container, component, meditor) {\n    var self = this;\n    var options = meditor.options;\n    var componentContent = component.children('.meditor-component-content');\n    componentContent.prop('contenteditable', true);\n    componentContent.on('input', function (e) {\n      if (typeof options.onComponentChanged === 'function') {\n        options.onComponentChanged.call(contentArea, e, component);\n      }\n\n      if (typeof options.onContainerChanged === 'function') {\n        options.onContainerChanged.call(contentArea, e, container);\n      }\n\n      if (typeof options.onContentChanged === 'function') {\n        options.onContentChanged.call(meditor, e, contentArea);\n      }\n    });\n    self.initCKEditor(meditor, function (ckeditor) {\n      var editor = ckeditor.inline(componentContent[0], self.options);\n      instances[componentContent.attr('id')] = editor;\n      editor.on('instanceReady', function () {\n        if (typeof options.onComponentReady === 'function') {\n          options.onComponentReady.call(contentArea, component, editor);\n        }\n      });\n    });\n  },\n  initCKEditor: function initCKEditor(meditor, callback) {\n    if (meditor.iframeWindow.CKEDITOR) {\n      callback(meditor.iframeWindow.CKEDITOR);\n    } else {\n      var ckeditorSrc = jquery__WEBPACK_IMPORTED_MODULE_0___default()(document.body).find('[data-type=\"ckeditor-script\"]').attr('src');\n      var ckeditorScript = meditor.iframeDoc[0].createElement('script');\n      ckeditorScript.type = 'text/javascript';\n      ckeditorScript.src = ckeditorSrc;\n\n      ckeditorScript.onreadystatechange = function () {\n        meditor.iframeWindow.CKEDITOR.disableAutoInline = true;\n        callback(meditor.iframeWindow.CKEDITOR);\n      };\n\n      ckeditorScript.onload = function () {\n        meditor.iframeWindow.CKEDITOR.disableAutoInline = true;\n        callback(meditor.iframeWindow.CKEDITOR);\n      };\n\n      meditor.iframeHead.append(ckeditorScript);\n      setTimeout(function () {\n        ckeditorScript.src = ckeditorSrc;\n      }, 500);\n    }\n  },\n  settingEnabled: true,\n  settingTitle: 'Button Settings',\n  initSettingForm: function initSettingForm(form, meditor) {\n    form.append(\"\\n            <form class=\\\"form-horizontal\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"button-border\\\" class=\\\"col-sm-12\\\">Border Style</label>\\n                    <div class=\\\"col-sm-12\\\">\\n                        <select id=\\\"border-style\\\" class=\\\"btn-border-style form-control\\\">\\n                            <option value=\\\"none\\\">None</option>\\n                            <option value=\\\"solid\\\">Solid</option>\\n                            <option value=\\\"dashed\\\">Dashed</option>\\n                            <option value=\\\"dotted\\\">Dotted</option>\\n                            <option value=\\\"double\\\">Double</option>\\n                            <option value=\\\"groove\\\">Groove</option>\\n                            <option value=\\\"ridge\\\">Ridge</option>\\n                            <option value=\\\"inset\\\">Inset</option>\\n                            <option value=\\\"outset\\\">Outset</option>\\n                        </select>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"button-border-background\\\" class=\\\"col-sm-12\\\">Background</label>\\n                    <div class=\\\"col-sm-12\\\">\\n                        <input type=\\\"text\\\" class=\\\"btn-background form-control\\\" id=\\\"background-color\\\" />\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"button-border-width\\\" class=\\\"col-sm-12\\\">Border Width</label>\\n                    <div class=\\\"col-sm-4\\\">\\n                        <input type=\\\"text\\\" class=\\\"btn-border-width form-control\\\" />\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"button-border-color\\\" class=\\\"col-sm-12\\\">Border Color</label>\\n                    <div class=\\\"col-sm-12\\\">\\n                        <input type=\\\"text\\\" id=\\\"border-color\\\" class=\\\"btn-border-color form-control\\\" />\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"button-align\\\" class=\\\"col-sm-12\\\">Align</label>\\n                    <div class=\\\"col-sm-12\\\">\\n                        <select id=\\\"btn-align\\\" class=\\\"btn-align form-control\\\">\\n                            <option value=\\\"left\\\">Left</option>\\n                            <option value=\\\"center\\\">Center</option>\\n                            <option value=\\\"right\\\">Right</option>\\n                        </select>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"button-border-radius\\\" class=\\\"col-sm-12\\\">Rounded Corner</label>\\n                    <div class=\\\"col-sm-12\\\" style=\\\"margin: 1px;\\\">\\n                        <div id=\\\"rounded-corners\\\" class=\\\"col-sm-10 rnd-crn\\\" style=\\\"margin-left: 10px;\\\"> </div>\\n                    </div>\\n                </div>\\n            </form>\\n        \");\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()(function () {\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"#rounded-corners\").slider({\n        classes: {\n          \"ui-slider\": \"highlight\"\n        },\n        max: 100,\n        min: 0,\n        step: 1\n      });\n    });\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"#border-color\").spectrum({\n      color: \"#f00\",\n      showInput: true,\n      preferredFormat: \"hex\"\n    });\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"#background-color\").spectrum({\n      color: \"#f00\",\n      showInput: true,\n      preferredFormat: \"hex\"\n    });\n    var borderStyle = form.find('#border-style');\n    borderStyle.on('change', function () {\n      var button_content_container = meditor.getSettingComponent().find('.mcnButtonContentContainer');\n      button_content_container.css('border-style', this.value);\n\n      if (this.value !== \"none\") {\n        jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"#border-color\").spectrum(\"enable\");\n      } else {\n        jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"#border-color\").spectrum(\"disable\");\n      }\n    });\n    var buttonBackgroundColor = form.find('.btn-background');\n    buttonBackgroundColor.on('change', function () {\n      var button_content_container = meditor.getSettingComponent().find('.mcnButtonContentContainer');\n      button_content_container.css('background-color', \"#\" + jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"#background-color\").spectrum(\"get\").toHex());\n    });\n    var roundedCorner = form.find('#rounded-corners');\n    roundedCorner.on('slide', function () {\n      var button_content_container = meditor.getSettingComponent().find('.mcnButtonContentContainer');\n      button_content_container.css('border-radius', jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"#rounded-corners\").slider(\"values\", 0));\n    });\n    var buttonAlign = form.find('.btn-align');\n    buttonAlign.on('change', function () {\n      var button_content_inner = meditor.getSettingComponent().find('.mcnButtonBlockInner');\n      button_content_inner[0].align = this.value;\n    });\n    var buttonBorderWidth = form.find('.btn-border-width');\n    buttonBorderWidth.on('change', function () {\n      var button_content_container = meditor.getSettingComponent().find('.mcnButtonContentContainer');\n      button_content_container.css('border-width', this.value);\n    });\n    var buttonBorderColor = form.find('.btn-border-color');\n    buttonBorderColor.on('change', function () {\n      var button_content_container = meditor.getSettingComponent().find('.mcnButtonContentContainer');\n      button_content_container.css('border-color', this.value);\n    });\n  },\n  getContent: function getContent(component, meditor) {\n    var componentContent = component.find('.meditor-component-content');\n    var id = componentContent.attr('id');\n    var editor = instances[id];\n\n    if (editor) {\n      return editor.getData();\n    } else {\n      return componentContent.html();\n    }\n  },\n  destroy: function destroy(component, meditor) {\n    var id = component.find('.meditor-component-content').attr('id');\n    instances[id] && instances[id].destroy();\n  },\n  showSettingForm: function showSettingForm(form, component, meditor) {\n    var button = component.find('.mcnButton');\n    var button_container = component.find('.mcnButtonContentContainer');\n    var button_block_inner = component.find('.mcnButtonBlockInner');\n    var borderTopStyle = form.find('#border-style');\n\n    for (var i = 0; i < borderTopStyle[0].options.length; i++) {\n      if (button_container[0].style.borderStyle.length === 0) {\n        button_container[0].style.borderStyle = \"none\";\n      }\n\n      if (borderTopStyle[0].options[i].value === button_container[0].style.borderStyle) {\n        borderTopStyle[0].options[i].selected = true;\n        break;\n      }\n    }\n\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"#background-color\").spectrum(\"set\", button_container.css('background-color')); //let buttonBorderRadius = form.find('.btn-border-radius');\n    //buttonBorderRadius.val(button_container.css('border-radius'));\n\n    var current_val = button_container.css('border-radius');\n    current_val = ('' + current_val).endsWith(\"px\") ? current_val.substring(0, current_val.length - 2) : current_val;\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"#rounded-corners\").slider(\"value\", current_val);\n    var buttonBorderWidth = form.find('.btn-border-width');\n    buttonBorderWidth.val(button_container.css('border-width'));\n\n    if (button_container[0].style.borderStyle === \"none\") {\n      jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"#border-color\").spectrum(\"disable\");\n    }\n\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"#border-color\").spectrum(\"set\", button_container.css('border-color'));\n    var buttonAlign = form.find('.btn-align');\n\n    for (var i = 0; i < buttonAlign[0].options.length; i++) {\n      if (buttonAlign[0].options[i].value === button_block_inner[0].align) {\n        buttonAlign[0].options[i].selected = true;\n        break;\n      }\n    }\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/meditor-component-email-button.js\n");

/***/ }),

/***/ "./src/components/meditor-component-email-image-caption.js":
/*!*****************************************************************!*\
  !*** ./src/components/meditor-component-email-image-caption.js ***!
  \*****************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var meditor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! meditor */ \"meditor\");\n/* harmony import */ var meditor__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(meditor__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_1__);\n\n\nvar instances = {};\nmeditor__WEBPACK_IMPORTED_MODULE_0___default.a.components['email-image-caption'] = {\n  options: {\n    toolbarGroups: [{\n      name: 'document',\n      groups: ['mode', 'document', 'doctools']\n    }, {\n      name: 'editing',\n      groups: ['find', 'selection', 'spellchecker', 'editing']\n    }, {\n      name: 'basicstyles',\n      groups: ['basicstyles', 'cleanup']\n    }, {\n      name: 'paragraph',\n      groups: ['list', 'indent', 'blocks', 'align', 'bidi', 'paragraph']\n    }, {\n      name: 'links',\n      groups: ['links']\n    }, {\n      name: 'insert',\n      groups: ['insert']\n    }, {\n      name: 'clipboard',\n      groups: ['clipboard', 'undo']\n    }, {\n      name: 'styles',\n      groups: ['styles']\n    }, {\n      name: 'colors',\n      groups: ['colors']\n    }],\n    title: false,\n    allowedContent: true,\n    // DISABLES Advanced Content Filter. This is so templates with classes: allowed through\n    bodyId: 'editor',\n    templates_replaceContent: false,\n    enterMode: 'P',\n    forceEnterMode: true,\n    format_tags: 'p;h1;h2;h3;h4;h5;h6',\n    removePlugins: 'table,magicline,tableselection,tabletools,div,contextmenu,liststyle',\n    removeButtons: 'Save,NewPage,Preview,Print,Templates,PasteText,PasteFromWord,Find,Replace,SelectAll,Scayt,Form,HiddenField,ImageButton,Button,Select,Textarea,TextField,Radio,Checkbox,Outdent,Indent,Blockquote,CreateDiv,Language,Table,HorizontalRule,Smiley,SpecialChar,PageBreak,Iframe,Styles,BGColor,Maximize,About,ShowBlocks,BidiLtr,BidiRtl,Flash,Image,Subscript,Superscript,Anchor',\n    minimumChangeMilliseconds: 100\n  },\n  initCKEditor: function initCKEditor(meditor, callback) {\n    if (meditor.iframeWindow.CKEDITOR) {\n      callback(meditor.iframeWindow.CKEDITOR);\n    } else {\n      var ckeditorSrc = jquery__WEBPACK_IMPORTED_MODULE_1___default()(document.body).find('[data-type=\"ckeditor-script\"]').attr('src');\n      var ckeditorScript = meditor.iframeDoc[0].createElement('script');\n      ckeditorScript.type = 'text/javascript';\n      ckeditorScript.src = ckeditorSrc;\n\n      ckeditorScript.onreadystatechange = function () {\n        meditor.iframeWindow.CKEDITOR.disableAutoInline = true;\n        callback(meditor.iframeWindow.CKEDITOR);\n      };\n\n      ckeditorScript.onload = function () {\n        meditor.iframeWindow.CKEDITOR.disableAutoInline = true;\n        callback(meditor.iframeWindow.CKEDITOR);\n      };\n\n      meditor.iframeHead.append(ckeditorScript);\n      setTimeout(function () {\n        ckeditorScript.src = ckeditorSrc;\n      }, 500);\n    }\n  },\n  init: function init(contentArea, container, component, meditor) {\n    var self = this;\n    var options = meditor.options;\n    var componentContent = component.children('.meditor-component-content');\n    componentContent.prop('contenteditable', true);\n    componentContent.on('input', function (e) {\n      if (typeof options.onComponentChanged === 'function') {\n        options.onComponentChanged.call(contentArea, e, component);\n      }\n\n      if (typeof options.onContainerChanged === 'function') {\n        options.onContainerChanged.call(contentArea, e, container);\n      }\n\n      if (typeof options.onContentChanged === 'function') {\n        options.onContentChanged.call(meditor, e, contentArea);\n      }\n    });\n    self.initCKEditor(meditor, function (ckeditor) {\n      var editor = ckeditor.inline(componentContent[0], self.options);\n      instances[componentContent.attr('id')] = editor;\n      editor.on('instanceReady', function () {\n        if (typeof options.onComponentReady === 'function') {\n          options.onComponentReady.call(contentArea, component, editor);\n        }\n      });\n    });\n  },\n  settingEnabled: true,\n  settingTitle: 'Image + Caption Settings',\n  initSettingForm: function initSettingForm(form, meditor) {\n    form.append(\"\\n            <form class=\\\"form-horizontal\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"caption-position\\\" class=\\\"col-sm-12\\\">Caption Position</label>\\n                    <div class=\\\"col-sm-12\\\">\\n                        <input type=\\\"text\\\" class=\\\"caption-position form-control\\\" />\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"caption-position\\\" class=\\\"col-sm-12\\\">Number of Images</label>\\n                    <div class=\\\"col-sm-12\\\">\\n                        <input type=\\\"text\\\" class=\\\"image-count form-control\\\" />\\n                    </div>\\n                </div>\\n            </form>\\n        \");\n    var imageCount = form.find('.image-count');\n    imageCount.on('change', function () {\n      var caption_top = meditor.getSettingComponent().find('.mcnCaptionTopContent');\n      var caption_bottom = meditor.getSettingComponent().find('.mcnCaptionBottomContent');\n      var caption_block_inner = meditor.getSettingComponent().find('.mcnCaptionBlockInner');\n      var caption_image_content_top = meditor.getSettingComponent().find('.mcnCaptionTopImageContent');\n      var caption_image_content_bottom = meditor.getSettingComponent().find('.mcnCaptionBottomImageContent');\n      var caption_text_content_bottom = meditor.getSettingComponent().find('.mcnTextContent');\n\n      if (caption_block_inner[0].children.length == 2 && this.value == 1) {\n        // delete one table inside \n        while (caption_block_inner[0].children.length > 1) {\n          caption_block_inner[0].children[caption_block_inner[0].children.length - 1].remove();\n        }\n\n        caption_top = meditor.getSettingComponent().find('.mcnCaptionTopContent');\n        caption_bottom = meditor.getSettingComponent().find('.mcnCaptionBottomContent');\n\n        if (caption_bottom[0]) {\n          caption_bottom[0].width = 564;\n        }\n\n        if (caption_top[0]) {\n          caption_top[0].width = 564;\n        }\n\n        caption_text_content_bottom[0].width = 564;\n      } else if (caption_block_inner[0].children.length == 1 && this.value == 2) {\n        // add one table inside\n        var image_table_clone = caption_block_inner[0].children[0].cloneNode(true);\n        caption_block_inner[0].appendChild(image_table_clone);\n\n        for (var i = 0; i < caption_block_inner[0].children.length; i++) {\n          caption_block_inner[0].children[i].width = \"282\";\n        }\n\n        caption_block_inner[0].children[0].align = \"left\";\n\n        if (caption_block_inner[0].children.length > 1) {\n          caption_block_inner[0].children[1].align = \"right\";\n        }\n      }\n    });\n    var captionPosition = form.find('.caption-position');\n    captionPosition.on('change', function () {\n      var caption_top = meditor.getSettingComponent().find('.mcnCaptionTopContent');\n      var caption_image_content_top = meditor.getSettingComponent().find('.mcnCaptionTopImageContent');\n      var caption_image_content_bottom = meditor.getSettingComponent().find('.mcnCaptionBottomImageContent');\n      var caption_text_content = meditor.getSettingComponent().find('.mcnTextContent');\n      var caption_block_inner = meditor.getSettingComponent().find('.mcnCaptionBlockInner');\n      var caption_bottom = meditor.getSettingComponent().find('.mcnCaptionBottomContent');\n\n      if (this.value === \"Bottom\") {\n        // clone image and text nodes\n        var caption_text_content_clone = meditor.getSettingComponent().find('.mcnTextContent')[0].parentNode.cloneNode(true);\n        var caption_image_content_top_clone = meditor.getSettingComponent().find('.mcnCaptionTopImageContent')[0].parentNode.cloneNode(true);\n        var caption_image_content_top_clone_1, caption_text_content_clone_1;\n\n        if (meditor.getSettingComponent().find('.mcnTextContent').length > 1) {\n          caption_text_content_clone_1 = meditor.getSettingComponent().find('.mcnTextContent')[1].parentNode.cloneNode(true);\n        }\n\n        if (meditor.getSettingComponent().find('.mcnCaptionTopImageContent').length > 1) {\n          caption_image_content_top_clone_1 = meditor.getSettingComponent().find('.mcnCaptionTopImageContent')[1].parentNode.cloneNode(true);\n        }\n\n        for (var i = 0; i < caption_top.length; i++) {\n          while (caption_top[i].children.length > 0) {\n            // delete image and text nodes\n            caption_image_content_top[0].parentNode.remove();\n            caption_text_content[0].parentNode.remove();\n\n            if (caption_top[i].children.length > 0) {\n              caption_top[i].children[0].remove();\n            }\n          }\n        } // insert image first then text node\n\n\n        caption_top[0].appendChild(caption_image_content_top_clone);\n        caption_top[0].appendChild(caption_text_content_clone);\n\n        if (caption_image_content_top_clone_1) {\n          caption_top[1].appendChild(caption_image_content_top_clone_1);\n        }\n\n        if (caption_text_content_clone_1) {\n          caption_top[1].appendChild(caption_text_content_clone_1);\n        }\n\n        for (var _i = 0; _i < caption_top.length; _i++) {\n          // swap class names\n          caption_top[_i].className = \"mcnCaptionBottomContent\";\n          caption_image_content_top = meditor.getSettingComponent().find('.mcnCaptionTopImageContent');\n          caption_image_content_top[0].className = \"mcnCaptionBottomImageContent\";\n        }\n\n        caption_block_inner[0].children[0].align = \"left\";\n\n        if (caption_block_inner[0].children.length > 1) {\n          caption_block_inner[0].children[1].align = \"right\";\n        }\n\n        caption_top = meditor.getSettingComponent().find('.mcnCaptionTopContent');\n        caption_bottom = meditor.getSettingComponent().find('.mcnCaptionBottomContent');\n      } else if (this.value === \"Top\") {\n        // clone image and text nodes\n        var _caption_text_content_clone = meditor.getSettingComponent().find('.mcnTextContent')[0].parentNode.cloneNode(true);\n\n        var caption_image_content_bottom_clone = meditor.getSettingComponent().find('.mcnCaptionBottomImageContent')[0].parentNode.cloneNode(true);\n\n        var _caption_text_content_clone_, caption_image_content_bottom_clone_1;\n\n        if (meditor.getSettingComponent().find('.mcnTextContent').length > 1) {\n          _caption_text_content_clone_ = meditor.getSettingComponent().find('.mcnTextContent')[1].parentNode.cloneNode(true);\n        }\n\n        if (meditor.getSettingComponent().find('.mcnCaptionBottomImageContent').length > 1) {\n          caption_image_content_bottom_clone_1 = meditor.getSettingComponent().find('.mcnCaptionBottomImageContent')[1].parentNode.cloneNode(true);\n        }\n\n        for (var _i2 = 0; _i2 < caption_bottom.length; _i2++) {\n          while (caption_bottom[_i2].children.length > 0) {\n            // delete image and text nodes\n            caption_image_content_bottom[0].parentNode.remove();\n            caption_text_content[0].parentNode.remove();\n\n            if (caption_bottom[_i2].children.length > 0) {\n              caption_bottom[_i2].children[0].remove();\n            }\n          }\n        } // insert image first then text node\n\n\n        caption_bottom[0].appendChild(_caption_text_content_clone);\n        caption_bottom[0].appendChild(caption_image_content_bottom_clone);\n\n        if (_caption_text_content_clone_) {\n          caption_bottom[1].appendChild(_caption_text_content_clone_);\n        }\n\n        if (caption_image_content_bottom_clone_1) {\n          caption_bottom[1].appendChild(caption_image_content_bottom_clone_1);\n        }\n\n        for (var _i3 = 0; _i3 < caption_bottom.length; _i3++) {\n          // swap class names\n          caption_bottom[_i3].className = \"mcnCaptionTopContent\";\n          caption_image_content_top = meditor.getSettingComponent().find('.mcnCaptionBottomImageContent');\n          caption_image_content_top[0].className = \"mcnCaptionTopImageContent\";\n        }\n\n        caption_block_inner[0].children[0].align = \"left\";\n\n        if (caption_block_inner[0].children.length > 1) {\n          caption_block_inner[0].children[1].align = \"right\";\n        }\n\n        caption_top = meditor.getSettingComponent().find('.mcnCaptionTopContent');\n        caption_bottom = meditor.getSettingComponent().find('.mcnCaptionBottomContent');\n      } else if (this.value === \"Left\") {\n        //mcnCaptionBlock\n        jquery__WEBPACK_IMPORTED_MODULE_1___default()(\".mcnCaptionTopContent\").each(function () {\n          var $this = jquery__WEBPACK_IMPORTED_MODULE_1___default()(this);\n          var newrows = [];\n          $this.find(\"tr\").each(function () {\n            var i = 0;\n            jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).find(\"td\").each(function () {\n              i++;\n\n              if (newrows[i] === undefined) {\n                newrows[i] = jquery__WEBPACK_IMPORTED_MODULE_1___default()(\"<tr></tr>\");\n              }\n\n              newrows[i].append(jquery__WEBPACK_IMPORTED_MODULE_1___default()(this));\n            });\n          });\n          $this.find(\"tr\").remove();\n          jquery__WEBPACK_IMPORTED_MODULE_1___default.a.each(newrows, function () {\n            $this.append(this);\n          });\n        });\n        jquery__WEBPACK_IMPORTED_MODULE_1___default()(\".mcnCaptionBottomContent\").each(function () {\n          var $this = jquery__WEBPACK_IMPORTED_MODULE_1___default()(this);\n          var newrows = [];\n          $this.find(\"tr\").each(function () {\n            var i = 0;\n            jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).find(\"td\").each(function () {\n              i++;\n\n              if (newrows[i] === undefined) {\n                newrows[i] = jquery__WEBPACK_IMPORTED_MODULE_1___default()(\"<tr></tr>\");\n              }\n\n              newrows[i].append(jquery__WEBPACK_IMPORTED_MODULE_1___default()(this));\n            });\n          });\n          $this.find(\"tr\").remove();\n          jquery__WEBPACK_IMPORTED_MODULE_1___default.a.each(newrows, function () {\n            $this.append(this);\n          });\n        });\n      }\n    });\n  },\n  showSettingForm: function showSettingForm(form, component, meditor) {\n    var caption_top = component.find('.mcnCaptionTopContent');\n    var caption_bottom = component.find('.mcnCaptionBottomContent');\n    var imageCountInComponent = 0;\n    var captionPosition = form.find('.caption-position');\n\n    if (caption_top.length > 0) {\n      imageCountInComponent = caption_top.length;\n      captionPosition.val(\"Top\");\n    } else if (caption_bottom.length > 0) {\n      imageCountInComponent = caption_bottom.length;\n      captionPosition.val(\"Bottom\");\n    }\n\n    var imageCount = form.find('.image-count');\n    imageCount.val(imageCountInComponent);\n  },\n  getContent: function getContent(component, meditor) {\n    var componentContent = component.find('.meditor-component-content');\n    var id = componentContent.attr('id');\n    var editor = instances[id];\n\n    if (editor) {\n      return editor.getData();\n    } else {\n      return componentContent.html();\n    }\n  },\n  destroy: function destroy(component, meditor) {\n    var id = component.find('.meditor-component-content').attr('id');\n    instances[id] && instances[id].destroy();\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9tZWRpdG9yLWNvbXBvbmVudC1lbWFpbC1pbWFnZS1jYXB0aW9uLmpzPzhmMjEiXSwibmFtZXMiOlsiaW5zdGFuY2VzIiwiTUVkaXRvciIsImNvbXBvbmVudHMiLCJvcHRpb25zIiwidG9vbGJhckdyb3VwcyIsIm5hbWUiLCJncm91cHMiLCJ0aXRsZSIsImFsbG93ZWRDb250ZW50IiwiYm9keUlkIiwidGVtcGxhdGVzX3JlcGxhY2VDb250ZW50IiwiZW50ZXJNb2RlIiwiZm9yY2VFbnRlck1vZGUiLCJmb3JtYXRfdGFncyIsInJlbW92ZVBsdWdpbnMiLCJyZW1vdmVCdXR0b25zIiwibWluaW11bUNoYW5nZU1pbGxpc2Vjb25kcyIsImluaXRDS0VkaXRvciIsIm1lZGl0b3IiLCJjYWxsYmFjayIsImlmcmFtZVdpbmRvdyIsIkNLRURJVE9SIiwiY2tlZGl0b3JTcmMiLCIkIiwiZG9jdW1lbnQiLCJib2R5IiwiZmluZCIsImF0dHIiLCJja2VkaXRvclNjcmlwdCIsImlmcmFtZURvYyIsImNyZWF0ZUVsZW1lbnQiLCJ0eXBlIiwic3JjIiwib25yZWFkeXN0YXRlY2hhbmdlIiwiZGlzYWJsZUF1dG9JbmxpbmUiLCJvbmxvYWQiLCJpZnJhbWVIZWFkIiwiYXBwZW5kIiwic2V0VGltZW91dCIsImluaXQiLCJjb250ZW50QXJlYSIsImNvbnRhaW5lciIsImNvbXBvbmVudCIsInNlbGYiLCJjb21wb25lbnRDb250ZW50IiwiY2hpbGRyZW4iLCJwcm9wIiwib24iLCJlIiwib25Db21wb25lbnRDaGFuZ2VkIiwiY2FsbCIsIm9uQ29udGFpbmVyQ2hhbmdlZCIsIm9uQ29udGVudENoYW5nZWQiLCJja2VkaXRvciIsImVkaXRvciIsImlubGluZSIsIm9uQ29tcG9uZW50UmVhZHkiLCJzZXR0aW5nRW5hYmxlZCIsInNldHRpbmdUaXRsZSIsImluaXRTZXR0aW5nRm9ybSIsImZvcm0iLCJpbWFnZUNvdW50IiwiY2FwdGlvbl90b3AiLCJnZXRTZXR0aW5nQ29tcG9uZW50IiwiY2FwdGlvbl9ib3R0b20iLCJjYXB0aW9uX2Jsb2NrX2lubmVyIiwiY2FwdGlvbl9pbWFnZV9jb250ZW50X3RvcCIsImNhcHRpb25faW1hZ2VfY29udGVudF9ib3R0b20iLCJjYXB0aW9uX3RleHRfY29udGVudF9ib3R0b20iLCJsZW5ndGgiLCJ2YWx1ZSIsInJlbW92ZSIsIndpZHRoIiwiaW1hZ2VfdGFibGVfY2xvbmUiLCJjbG9uZU5vZGUiLCJhcHBlbmRDaGlsZCIsImkiLCJhbGlnbiIsImNhcHRpb25Qb3NpdGlvbiIsImNhcHRpb25fdGV4dF9jb250ZW50IiwiY2FwdGlvbl90ZXh0X2NvbnRlbnRfY2xvbmUiLCJwYXJlbnROb2RlIiwiY2FwdGlvbl9pbWFnZV9jb250ZW50X3RvcF9jbG9uZSIsImNhcHRpb25faW1hZ2VfY29udGVudF90b3BfY2xvbmVfMSIsImNhcHRpb25fdGV4dF9jb250ZW50X2Nsb25lXzEiLCJjbGFzc05hbWUiLCJjYXB0aW9uX2ltYWdlX2NvbnRlbnRfYm90dG9tX2Nsb25lIiwiY2FwdGlvbl9pbWFnZV9jb250ZW50X2JvdHRvbV9jbG9uZV8xIiwiZWFjaCIsIiR0aGlzIiwibmV3cm93cyIsInVuZGVmaW5lZCIsInNob3dTZXR0aW5nRm9ybSIsImltYWdlQ291bnRJbkNvbXBvbmVudCIsInZhbCIsImdldENvbnRlbnQiLCJpZCIsImdldERhdGEiLCJodG1sIiwiZGVzdHJveSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFFQSxJQUFNQSxTQUFTLEdBQUcsRUFBbEI7QUFFQUMsOENBQU8sQ0FBQ0MsVUFBUixDQUFtQixxQkFBbkIsSUFBNEM7QUFDeENDLFNBQU8sRUFBRTtBQUNMQyxpQkFBYSxFQUFFLENBQ1g7QUFBQ0MsVUFBSSxFQUFFLFVBQVA7QUFBbUJDLFlBQU0sRUFBRSxDQUFDLE1BQUQsRUFBUyxVQUFULEVBQXFCLFVBQXJCO0FBQTNCLEtBRFcsRUFFWDtBQUFDRCxVQUFJ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LENBQUNnRyxFQUFELENBQVQsQ0FBY0csT0FBZCxFQUFqQjtBQUNIO0FBOVR1QyxDQUE1QyIsImZpbGUiOiIuL3NyYy9jb21wb25lbnRzL21lZGl0b3ItY29tcG9uZW50LWVtYWlsLWltYWdlLWNhcHRpb24uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTUVkaXRvciBmcm9tICdtZWRpdG9yJztcbmltcG9ydCAkIGZyb20gJ2pxdWVyeSc7XG5cbmNvbnN0IGluc3RhbmNlcyA9IHt9O1xuXG5NRWRpdG9yLmNvbXBvbmVudHNbJ2VtYWlsLWltYWdlLWNhcHRpb24nXSA9IHtcbiAgICBvcHRpb25zOiB7XG4gICAgICAgIHRvb2xiYXJHcm91cHM6IFtcbiAgICAgICAgICAgIHtuYW1lOiAnZG9jdW1lbnQnLCBncm91cHM6IFsnbW9kZScsICdkb2N1bWVudCcsICdkb2N0b29scyddfSxcbiAgICAgICAgICAgIHtuYW1lOiAnZWRpdGluZycsIGdyb3VwczogWydmaW5kJywgJ3NlbGVjdGlvbicsICdzcGVsbGNoZWNrZXInLCAnZWRpdGluZyddfSxcbiAgICAgICAgICAgIHtuYW1lOiAnYmFzaWNzdHlsZXMnLCBncm91cHM6IFsnYmFzaWNzdHlsZXMnLCAnY2xlYW51cCddfSxcbiAgICAgICAgICAgIHtuYW1lOiAncGFyYWdyYXBoJywgZ3JvdXBzOiBbJ2xpc3QnLCAnaW5kZW50JywgJ2Jsb2NrcycsICdhbGlnbicsICdiaWRpJywgJ3BhcmFncmFwaCddfSxcbiAgICAgICAgICAgIHtuYW1lOiAnbGlua3MnLCBncm91cHM6IFsnbGlua3MnXX0sXG4gICAgICAgICAgICB7bmFtZTogJ2luc2VydCcsIGdyb3VwczogWydpbnNlcnQnXX0sXG4gICAgICAgICAgICB7bmFtZTogJ2NsaXBib2FyZCcsIGdyb3VwczogWydjbGlwYm9hcmQnLCAndW5kbyddfSxcbiAgICAgICAgICAgIHtuYW1lOiAnc3R5bGVzJywgZ3JvdXBzOiBbJ3N0eWxlcyddfSxcbiAgICAgICAgICAgIHtuYW1lOiAnY29sb3JzJywgZ3JvdXBzOiBbJ2NvbG9ycyddfSxcbiAgICAgICAgXSxcbiAgICAgICAgdGl0bGU6IGZhbHNlLFxuICAgICAgICBhbGxvd2VkQ29udGVudDogdHJ1ZSwgLy8gRElTQUJMRVMgQWR2YW5jZWQgQ29udGVudCBGaWx0ZXIuIFRoaXMgaXMgc28gdGVtcGxhdGVzIHdpdGggY2xhc3NlczogYWxsb3dlZCB0aHJvdWdoXG4gICAgICAgIGJvZHlJZDogJ2VkaXRvcicsXG4gICAgICAgIHRlbXBsYXRlc19yZXBsYWNlQ29udGVudDogZmFsc2UsXG4gICAgICAgIGVudGVyTW9kZTogJ1AnLFxuICAgICAgICBmb3JjZUVudGVyTW9kZTogdHJ1ZSxcbiAgICAgICAgZm9ybWF0X3RhZ3M6ICdwO2gxO2gyO2gzO2g0O2g1O2g2JyxcbiAgICAgICAgcmVtb3ZlUGx1Z2luczogJ3RhYmxlLG1hZ2ljbGluZSx0YWJsZXNlbGVjdGlvbix0YWJsZXRvb2xzLGRpdixjb250ZXh0bWVudSxsaXN0c3R5bGUnLFxuICAgICAgICByZW1vdmVCdXR0b25zOiAnU2F2ZSxOZXdQYWdlLFByZXZpZXcsUHJpbnQsVGVtcGxhdGVzLFBhc3RlVGV4dCxQYXN0ZUZyb21Xb3JkLEZpbmQsUmVwbGFjZSxTZWxlY3RBbGwsU2NheXQsRm9ybSxIaWRkZW5GaWVsZCxJbWFnZUJ1dHRvbixCdXR0b24sU2VsZWN0LFRleHRhcmVhLFRleHRGaWVsZCxSYWRpbyxDaGVja2JveCxPdXRkZW50LEluZGVudCxCbG9ja3F1b3RlLENyZWF0ZURpdixMYW5ndWFnZSxUYWJsZSxIb3Jpem9udGFsUnVsZSxTbWlsZXksU3BlY2lhbENoYXIsUGFnZUJyZWFrLElmcmFtZSxTdHlsZXMsQkdDb2xvcixNYXhpbWl6ZSxBYm91dCxTaG93QmxvY2tzLEJpZGlMdHIsQmlkaVJ0bCxGbGFzaCxJbWFnZSxTdWJzY3JpcHQsU3VwZXJzY3JpcHQsQW5jaG9yJyxcbiAgICAgICAgbWluaW11bUNoYW5nZU1pbGxpc2Vjb25kczogMTAwXG4gICAgfSxcblxuICAgIGluaXRDS0VkaXRvcjogZnVuY3Rpb24gKG1lZGl0b3IsIGNhbGxiYWNrKSB7XG4gICAgICAgIGlmIChtZWRpdG9yLmlmcmFtZVdpbmRvdy5DS0VESVRPUikge1xuICAgICAgICAgICAgY2FsbGJhY2sobWVkaXRvci5pZnJhbWVXaW5kb3cuQ0tFRElUT1IpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbGV0IGNrZWRpdG9yU3JjID0gJChkb2N1bWVudC5ib2R5KS5maW5kKCdbZGF0YS10eXBlPVwiY2tlZGl0b3Itc2NyaXB0XCJdJykuYXR0cignc3JjJyk7XG4gICAgICAgICAgICBsZXQgY2tlZGl0b3JTY3JpcHQgPSBtZWRpdG9yLmlmcmFtZURvY1swXS5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTtcbiAgICAgICAgICAgIGNrZWRpdG9yU2NyaXB0LnR5cGUgPSAndGV4dC9qYXZhc2NyaXB0JztcbiAgICAgICAgICAgIGNrZWRpdG9yU2NyaXB0LnNyYyA9IGNrZWRpdG9yU3JjO1xuICAgICAgICAgICAgY2tlZGl0b3JTY3JpcHQub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIG1lZGl0b3IuaWZyYW1lV2luZG93LkNLRURJVE9SLmRpc2FibGVBdXRvSW5saW5lID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBjYWxsYmFjayhtZWRpdG9yLmlmcmFtZVdpbmRvdy5DS0VESVRPUik7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgY2tlZGl0b3JTY3JpcHQub25sb2FkID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIG1lZGl0b3IuaWZyYW1lV2luZG93LkNLRURJVE9SLmRpc2FibGVBdXRvSW5saW5lID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBjYWxsYmFjayhtZWRpdG9yLmlmcmFtZVdpbmRvdy5DS0VESVRPUik7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgbWVkaXRvci5pZnJhbWVIZWFkLmFwcGVuZChja2VkaXRvclNjcmlwdCk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgIGNrZWRpdG9yU2NyaXB0LnNyYyA9IGNrZWRpdG9yU3JjO1xuICAgICAgICAgICAgfSwgNTAwKTtcbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICBpbml0OiBmdW5jdGlvbiAoY29udGVudEFyZWEsIGNvbnRhaW5lciwgY29tcG9uZW50LCBtZWRpdG9yKSB7XG4gICAgICAgIGxldCBzZWxmID0gdGhpcztcbiAgICAgICAgbGV0IG9wdGlvbnMgPSBtZWRpdG9yLm9wdGlvbnM7XG4gICAgICAgIFxuICAgICAgICBsZXQgY29tcG9uZW50Q29udGVudCA9IGNvbXBvbmVudC5jaGlsZHJlbignLm1lZGl0b3ItY29tcG9uZW50LWNvbnRlbnQnKTtcbiAgICAgICAgY29tcG9uZW50Q29udGVudC5wcm9wKCdjb250ZW50ZWRpdGFibGUnLCB0cnVlKTtcbiAgICAgICAgXG4gICAgICAgIGNvbXBvbmVudENvbnRlbnQub24oJ2lucHV0JywgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2Ygb3B0aW9ucy5vbkNvbXBvbmVudENoYW5nZWQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICBvcHRpb25zLm9uQ29tcG9uZW50Q2hhbmdlZC5jYWxsKGNvbnRlbnRBcmVhLCBlLCBjb21wb25lbnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICBpZiAodHlwZW9mIG9wdGlvbnMub25Db250YWluZXJDaGFuZ2VkID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgb3B0aW9ucy5vbkNvbnRhaW5lckNoYW5nZWQuY2FsbChjb250ZW50QXJlYSwgZSwgY29udGFpbmVyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaWYgKHR5cGVvZiBvcHRpb25zLm9uQ29udGVudENoYW5nZWQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICBvcHRpb25zLm9uQ29udGVudENoYW5nZWQuY2FsbChtZWRpdG9yLCBlLCBjb250ZW50QXJlYSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBcbiAgICAgICAgc2VsZi5pbml0Q0tFZGl0b3IobWVkaXRvciwgZnVuY3Rpb24gKGNrZWRpdG9yKSB7XG4gICAgICAgICAgICBsZXQgZWRpdG9yID0gY2tlZGl0b3IuaW5saW5lKGNvbXBvbmVudENvbnRlbnRbMF0sIHNlbGYub3B0aW9ucyk7XG4gICAgICAgICAgICBpbnN0YW5jZXNbY29tcG9uZW50Q29udGVudC5hdHRyKCdpZCcpXSA9IGVkaXRvcjtcbiAgICAgICAgICAgIGVkaXRvci5vbignaW5zdGFuY2VSZWFkeScsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIG9wdGlvbnMub25Db21wb25lbnRSZWFkeSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgICAgICBvcHRpb25zLm9uQ29tcG9uZW50UmVhZHkuY2FsbChjb250ZW50QXJlYSwgY29tcG9uZW50LCBlZGl0b3IpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9LFxuICAgIFxuICAgIHNldHRpbmdFbmFibGVkOiB0cnVlLFxuICAgIFxuICAgIHNldHRpbmdUaXRsZTogJ0ltYWdlICsgQ2FwdGlvbiBTZXR0aW5ncycsXG4gICAgXG4gICAgaW5pdFNldHRpbmdGb3JtOiBmdW5jdGlvbiAoZm9ybSwgbWVkaXRvcikge1xuICAgICAgICBmb3JtLmFwcGVuZChgXG4gICAgICAgICAgICA8Zm9ybSBjbGFzcz1cImZvcm0taG9yaXpvbnRhbFwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmb3JtLWdyb3VwXCI+XG4gICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9XCJjYXB0aW9uLXBvc2l0aW9uXCIgY2xhc3M9XCJjb2wtc20tMTJcIj5DYXB0aW9uIFBvc2l0aW9uPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbC1zbS0xMlwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgY2xhc3M9XCJjYXB0aW9uLXBvc2l0aW9uIGZvcm0tY29udHJvbFwiIC8+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZvcm0tZ3JvdXBcIj5cbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj1cImNhcHRpb24tcG9zaXRpb25cIiBjbGFzcz1cImNvbC1zbS0xMlwiPk51bWJlciBvZiBJbWFnZXM8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLXNtLTEyXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIiBjbGFzcz1cImltYWdlLWNvdW50IGZvcm0tY29udHJvbFwiIC8+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9mb3JtPlxuICAgICAgICBgKTtcbiAgICAgICAgXG4gICAgICAgIGxldCBpbWFnZUNvdW50ID0gZm9ybS5maW5kKCcuaW1hZ2UtY291bnQnKTtcbiAgICAgICAgaW1hZ2VDb3VudC5vbignY2hhbmdlJywgZnVuY3Rpb24oKSB7IFxuICAgICAgICAgICAgbGV0IGNhcHRpb25fdG9wID0gbWVkaXRvci5nZXRTZXR0aW5nQ29tcG9uZW50KCkuZmluZCgnLm1jbkNhcHRpb25Ub3BDb250ZW50Jyk7XG4gICAgICAgICAgICBsZXQgY2FwdGlvbl9ib3R0b20gPSBtZWRpdG9yLmdldFNldHRpbmdDb21wb25lbnQoKS5maW5kKCcubWNuQ2FwdGlvbkJvdHRvbUNvbnRlbnQnKTtcbiAgICAgICAgICAgIGxldCBjYXB0aW9uX2Jsb2NrX2lubmVyID0gbWVkaXRvci5nZXRTZXR0aW5nQ29tcG9uZW50KCkuZmluZCgnLm1jbkNhcHRpb25CbG9ja0lubmVyJyk7XG4gICAgICAgICAgICBsZXQgY2FwdGlvbl9pbWFnZV9jb250ZW50X3RvcCA9IG1lZGl0b3IuZ2V0U2V0dGluZ0NvbXBvbmVudCgpLmZpbmQoJy5tY25DYXB0aW9uVG9wSW1hZ2VDb250ZW50Jyk7XG4gICAgICAgICAgICBsZXQgY2FwdGlvbl9pbWFnZV9jb250ZW50X2JvdHRvbSA9IG1lZGl0b3IuZ2V0U2V0dGluZ0NvbXBvbmVudCgpLmZpbmQoJy5tY25DYXB0aW9uQm90dG9tSW1hZ2VDb250ZW50Jyk7XG4gICAgICAgICAgICBsZXQgY2FwdGlvbl90ZXh0X2NvbnRlbnRfYm90dG9tID0gbWVkaXRvci5nZXRTZXR0aW5nQ29tcG9uZW50KCkuZmluZCgnLm1jblRleHRDb250ZW50Jyk7XG5cbiAgICAgICAgICAgIGlmIChjYXB0aW9uX2Jsb2NrX2lubmVyWzBdLmNoaWxkcmVuLmxlbmd0aCA9PSAyICYmIHRoaXMudmFsdWUgPT0gMSkge1xuICAgICAgICAgICAgICAgIC8vIGRlbGV0ZSBvbmUgdGFibGUgaW5zaWRlIFxuICAgICAgICAgICAgICAgIHdoaWxlKGNhcHRpb25fYmxvY2tfaW5uZXJbMF0uY2hpbGRyZW4ubGVuZ3RoID4gMSkge1xuICAgICAgICAgICAgICAgICAgICBjYXB0aW9uX2Jsb2NrX2lubmVyWzBdLmNoaWxkcmVuW2NhcHRpb25fYmxvY2tfaW5uZXJbMF0uY2hpbGRyZW4ubGVuZ3RoIC0gMV0ucmVtb3ZlKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhcHRpb25fdG9wID0gbWVkaXRvci5nZXRTZXR0aW5nQ29tcG9uZW50KCkuZmluZCgnLm1jbkNhcHRpb25Ub3BDb250ZW50Jyk7XG4gICAgICAgICAgICAgICAgY2FwdGlvbl9ib3R0b20gPSBtZWRpdG9yLmdldFNldHRpbmdDb21wb25lbnQoKS5maW5kKCcubWNuQ2FwdGlvbkJvdHRvbUNvbnRlbnQnKTtcbiAgICAgICAgICAgICAgICBpZiAoY2FwdGlvbl9ib3R0b21bMF0pIHtcbiAgICAgICAgICAgICAgICAgICAgY2FwdGlvbl9ib3R0b21bMF0ud2lkdGggPSA1NjQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChjYXB0aW9uX3RvcFswXSkge1xuICAgICAgICAgICAgICAgICAgICBjYXB0aW9uX3RvcFswXS53aWR0aCA9IDU2NDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2FwdGlvbl90ZXh0X2NvbnRlbnRfYm90dG9tWzBdLndpZHRoID0gNTY0O1xuICAgICAgICAgICAgfSBlbHNlIGlmIChjYXB0aW9uX2Jsb2NrX2lubmVyWzBdLmNoaWxkcmVuLmxlbmd0aCA9PSAxICYmIHRoaXMudmFsdWUgPT0gMikge1xuICAgICAgICAgICAgICAgIC8vIGFkZCBvbmUgdGFibGUgaW5zaWRlXG4gICAgICAgICAgICAgICAgbGV0IGltYWdlX3RhYmxlX2Nsb25lID0gY2FwdGlvbl9ibG9ja19pbm5lclswXS5jaGlsZHJlblswXS5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgICAgICAgICAgICAgY2FwdGlvbl9ibG9ja19pbm5lclswXS5hcHBlbmRDaGlsZChpbWFnZV90YWJsZV9jbG9uZSk7XG5cbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpPTA7IGk8Y2FwdGlvbl9ibG9ja19pbm5lclswXS5jaGlsZHJlbi5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICBjYXB0aW9uX2Jsb2NrX2lubmVyWzBdLmNoaWxkcmVuW2ldLndpZHRoID0gXCIyODJcIjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2FwdGlvbl9ibG9ja19pbm5lclswXS5jaGlsZHJlblswXS5hbGlnbiA9IFwibGVmdFwiO1xuICAgICAgICAgICAgICAgIGlmIChjYXB0aW9uX2Jsb2NrX2lubmVyWzBdLmNoaWxkcmVuLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FwdGlvbl9ibG9ja19pbm5lclswXS5jaGlsZHJlblsxXS5hbGlnbiA9IFwicmlnaHRcIjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGxldCBjYXB0aW9uUG9zaXRpb24gPSBmb3JtLmZpbmQoJy5jYXB0aW9uLXBvc2l0aW9uJyk7XG4gICAgICAgIGNhcHRpb25Qb3NpdGlvbi5vbignY2hhbmdlJywgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBsZXQgY2FwdGlvbl90b3AgPSBtZWRpdG9yLmdldFNldHRpbmdDb21wb25lbnQoKS5maW5kKCcubWNuQ2FwdGlvblRvcENvbnRlbnQnKTtcbiAgICAgICAgICAgIGxldCBjYXB0aW9uX2ltYWdlX2NvbnRlbnRfdG9wID0gbWVkaXRvci5nZXRTZXR0aW5nQ29tcG9uZW50KCkuZmluZCgnLm1jbkNhcHRpb25Ub3BJbWFnZUNvbnRlbnQnKTtcbiAgICAgICAgICAgIGxldCBjYXB0aW9uX2ltYWdlX2NvbnRlbnRfYm90dG9tID0gbWVkaXRvci5nZXRTZXR0aW5nQ29tcG9uZW50KCkuZmluZCgnLm1jbkNhcHRpb25Cb3R0b21JbWFnZUNvbnRlbnQnKTtcbiAgICAgICAgICAgIGxldCBjYXB0aW9uX3RleHRfY29udGVudCA9IG1lZGl0b3IuZ2V0U2V0dGluZ0NvbXBvbmVudCgpLmZpbmQoJy5tY25UZXh0Q29udGVudCcpO1xuICAgICAgICAgICAgbGV0IGNhcHRpb25fYmxvY2tfaW5uZXIgPSBtZWRpdG9yLmdldFNldHRpbmdDb21wb25lbnQoKS5maW5kKCcubWNuQ2FwdGlvbkJsb2NrSW5uZXInKTtcbiAgICAgICAgICAgIGxldCBjYXB0aW9uX2JvdHRvbSA9IG1lZGl0b3IuZ2V0U2V0dGluZ0NvbXBvbmVudCgpLmZpbmQoJy5tY25DYXB0aW9uQm90dG9tQ29udGVudCcpO1xuXG4gICAgICAgICAgICBpZiAodGhpcy52YWx1ZSA9PT0gXCJCb3R0b21cIikge1xuICAgICAgICAgICAgICAgIC8vIGNsb25lIGltYWdlIGFuZCB0ZXh0IG5vZGVzXG4gICAgICAgICAgICAgICAgbGV0IGNhcHRpb25fdGV4dF9jb250ZW50X2Nsb25lID0gbWVkaXRvci5nZXRTZXR0aW5nQ29tcG9uZW50KCkuZmluZCgnLm1jblRleHRDb250ZW50JylbMF0ucGFyZW50Tm9kZS5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgICAgICAgICAgICAgbGV0IGNhcHRpb25faW1hZ2VfY29udGVudF90b3BfY2xvbmUgPSBtZWRpdG9yLmdldFNldHRpbmdDb21wb25lbnQoKS5maW5kKCcubWNuQ2FwdGlvblRvcEltYWdlQ29udGVudCcpWzBdLnBhcmVudE5vZGUuY2xvbmVOb2RlKHRydWUpOyBcbiAgICAgICAgICAgICAgICBsZXQgY2FwdGlvbl9pbWFnZV9jb250ZW50X3RvcF9jbG9uZV8xLGNhcHRpb25fdGV4dF9jb250ZW50X2Nsb25lXzE7XG5cbiAgICAgICAgICAgICAgICBpZiAobWVkaXRvci5nZXRTZXR0aW5nQ29tcG9uZW50KCkuZmluZCgnLm1jblRleHRDb250ZW50JykubGVuZ3RoID4gMSkge1xuICAgICAgICAgICAgICAgICAgICBjYXB0aW9uX3RleHRfY29udGVudF9jbG9uZV8xID0gbWVkaXRvci5nZXRTZXR0aW5nQ29tcG9uZW50KCkuZmluZCgnLm1jblRleHRDb250ZW50JylbMV0ucGFyZW50Tm9kZS5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChtZWRpdG9yLmdldFNldHRpbmdDb21wb25lbnQoKS5maW5kKCcubWNuQ2FwdGlvblRvcEltYWdlQ29udGVudCcpLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FwdGlvbl9pbWFnZV9jb250ZW50X3RvcF9jbG9uZV8xID0gbWVkaXRvci5nZXRTZXR0aW5nQ29tcG9uZW50KCkuZmluZCgnLm1jbkNhcHRpb25Ub3BJbWFnZUNvbnRlbnQnKVsxXS5wYXJlbnROb2RlLmNsb25lTm9kZSh0cnVlKTsgXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGZvciAobGV0IGk9MDsgaTxjYXB0aW9uX3RvcC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICB3aGlsZSAoY2FwdGlvbl90b3BbaV0uY2hpbGRyZW4ubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gZGVsZXRlIGltYWdlIGFuZCB0ZXh0IG5vZGVzXG4gICAgICAgICAgICAgICAgICAgICAgICBjYXB0aW9uX2ltYWdlX2NvbnRlbnRfdG9wWzBdLnBhcmVudE5vZGUucmVtb3ZlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXB0aW9uX3RleHRfY29udGVudFswXS5wYXJlbnROb2RlLnJlbW92ZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNhcHRpb25fdG9wW2ldLmNoaWxkcmVuLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXB0aW9uX3RvcFtpXS5jaGlsZHJlblswXS5yZW1vdmUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgIFxuICAgICAgICAgICAgICAgIC8vIGluc2VydCBpbWFnZSBmaXJzdCB0aGVuIHRleHQgbm9kZVxuICAgICAgICAgICAgICAgIGNhcHRpb25fdG9wWzBdLmFwcGVuZENoaWxkKGNhcHRpb25faW1hZ2VfY29udGVudF90b3BfY2xvbmUpO1xuICAgICAgICAgICAgICAgIGNhcHRpb25fdG9wWzBdLmFwcGVuZENoaWxkKGNhcHRpb25fdGV4dF9jb250ZW50X2Nsb25lKTtcbiAgICAgICAgICAgICAgICBpZiAoY2FwdGlvbl9pbWFnZV9jb250ZW50X3RvcF9jbG9uZV8xKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhcHRpb25fdG9wWzFdLmFwcGVuZENoaWxkKGNhcHRpb25faW1hZ2VfY29udGVudF90b3BfY2xvbmVfMSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChjYXB0aW9uX3RleHRfY29udGVudF9jbG9uZV8xKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhcHRpb25fdG9wWzFdLmFwcGVuZENoaWxkKGNhcHRpb25fdGV4dF9jb250ZW50X2Nsb25lXzEpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGZvciAobGV0IGk9MDsgaTxjYXB0aW9uX3RvcC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAvLyBzd2FwIGNsYXNzIG5hbWVzXG4gICAgICAgICAgICAgICAgICAgIGNhcHRpb25fdG9wW2ldLmNsYXNzTmFtZSA9IFwibWNuQ2FwdGlvbkJvdHRvbUNvbnRlbnRcIjtcbiAgICAgICAgICAgICAgICAgICAgY2FwdGlvbl9pbWFnZV9jb250ZW50X3RvcCA9IG1lZGl0b3IuZ2V0U2V0dGluZ0NvbXBvbmVudCgpLmZpbmQoJy5tY25DYXB0aW9uVG9wSW1hZ2VDb250ZW50Jyk7XG4gICAgICAgICAgICAgICAgICAgIGNhcHRpb25faW1hZ2VfY29udGVudF90b3BbMF0uY2xhc3NOYW1lID0gXCJtY25DYXB0aW9uQm90dG9tSW1hZ2VDb250ZW50XCI7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgY2FwdGlvbl9ibG9ja19pbm5lclswXS5jaGlsZHJlblswXS5hbGlnbiA9IFwibGVmdFwiO1xuICAgICAgICAgICAgICAgIGlmIChjYXB0aW9uX2Jsb2NrX2lubmVyWzBdLmNoaWxkcmVuLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FwdGlvbl9ibG9ja19pbm5lclswXS5jaGlsZHJlblsxXS5hbGlnbiA9IFwicmlnaHRcIjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2FwdGlvbl90b3AgPSBtZWRpdG9yLmdldFNldHRpbmdDb21wb25lbnQoKS5maW5kKCcubWNuQ2FwdGlvblRvcENvbnRlbnQnKTtcbiAgICAgICAgICAgICAgICBjYXB0aW9uX2JvdHRvbSA9IG1lZGl0b3IuZ2V0U2V0dGluZ0NvbXBvbmVudCgpLmZpbmQoJy5tY25DYXB0aW9uQm90dG9tQ29udGVudCcpO1xuXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMudmFsdWUgPT09IFwiVG9wXCIpIHtcblxuICAgICAgICAgICAgICAgIC8vIGNsb25lIGltYWdlIGFuZCB0ZXh0IG5vZGVzXG4gICAgICAgICAgICAgICAgbGV0IGNhcHRpb25fdGV4dF9jb250ZW50X2Nsb25lID0gbWVkaXRvci5nZXRTZXR0aW5nQ29tcG9uZW50KCkuZmluZCgnLm1jblRleHRDb250ZW50JylbMF0ucGFyZW50Tm9kZS5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgICAgICAgICAgICAgbGV0IGNhcHRpb25faW1hZ2VfY29udGVudF9ib3R0b21fY2xvbmUgPSBtZWRpdG9yLmdldFNldHRpbmdDb21wb25lbnQoKS5maW5kKCcubWNuQ2FwdGlvbkJvdHRvbUltYWdlQ29udGVudCcpWzBdLnBhcmVudE5vZGUuY2xvbmVOb2RlKHRydWUpOyBcbiAgICAgICAgICAgICAgICBsZXQgY2FwdGlvbl90ZXh0X2NvbnRlbnRfY2xvbmVfMSwgY2FwdGlvbl9pbWFnZV9jb250ZW50X2JvdHRvbV9jbG9uZV8xO1xuICAgICAgICAgICAgICAgIGlmIChtZWRpdG9yLmdldFNldHRpbmdDb21wb25lbnQoKS5maW5kKCcubWNuVGV4dENvbnRlbnQnKS5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhcHRpb25fdGV4dF9jb250ZW50X2Nsb25lXzEgPSBtZWRpdG9yLmdldFNldHRpbmdDb21wb25lbnQoKS5maW5kKCcubWNuVGV4dENvbnRlbnQnKVsxXS5wYXJlbnROb2RlLmNsb25lTm9kZSh0cnVlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKG1lZGl0b3IuZ2V0U2V0dGluZ0NvbXBvbmVudCgpLmZpbmQoJy5tY25DYXB0aW9uQm90dG9tSW1hZ2VDb250ZW50JykubGVuZ3RoID4gMSkge1xuICAgICAgICAgICAgICAgICAgICBjYXB0aW9uX2ltYWdlX2NvbnRlbnRfYm90dG9tX2Nsb25lXzEgPSBtZWRpdG9yLmdldFNldHRpbmdDb21wb25lbnQoKS5maW5kKCcubWNuQ2FwdGlvbkJvdHRvbUltYWdlQ29udGVudCcpWzFdLnBhcmVudE5vZGUuY2xvbmVOb2RlKHRydWUpOyBcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaT0wOyBpPGNhcHRpb25fYm90dG9tLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIHdoaWxlIChjYXB0aW9uX2JvdHRvbVtpXS5jaGlsZHJlbi5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBkZWxldGUgaW1hZ2UgYW5kIHRleHQgbm9kZXNcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhcHRpb25faW1hZ2VfY29udGVudF9ib3R0b21bMF0ucGFyZW50Tm9kZS5yZW1vdmUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhcHRpb25fdGV4dF9jb250ZW50WzBdLnBhcmVudE5vZGUucmVtb3ZlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2FwdGlvbl9ib3R0b21baV0uY2hpbGRyZW4ubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhcHRpb25fYm90dG9tW2ldLmNoaWxkcmVuWzBdLnJlbW92ZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLy8gaW5zZXJ0IGltYWdlIGZpcnN0IHRoZW4gdGV4dCBub2RlXG4gICAgICAgICAgICAgICAgY2FwdGlvbl9ib3R0b21bMF0uYXBwZW5kQ2hpbGQoY2FwdGlvbl90ZXh0X2NvbnRlbnRfY2xvbmUpO1xuICAgICAgICAgICAgICAgIGNhcHRpb25fYm90dG9tWzBdLmFwcGVuZENoaWxkKGNhcHRpb25faW1hZ2VfY29udGVudF9ib3R0b21fY2xvbmUpO1xuICAgICAgICAgICAgICAgIGlmIChjYXB0aW9uX3RleHRfY29udGVudF9jbG9uZV8xKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhcHRpb25fYm90dG9tWzFdLmFwcGVuZENoaWxkKGNhcHRpb25fdGV4dF9jb250ZW50X2Nsb25lXzEpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoY2FwdGlvbl9pbWFnZV9jb250ZW50X2JvdHRvbV9jbG9uZV8xKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhcHRpb25fYm90dG9tWzFdLmFwcGVuZENoaWxkKGNhcHRpb25faW1hZ2VfY29udGVudF9ib3R0b21fY2xvbmVfMSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGZvciAobGV0IGk9MDsgaTxjYXB0aW9uX2JvdHRvbS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAvLyBzd2FwIGNsYXNzIG5hbWVzXG4gICAgICAgICAgICAgICAgICAgIGNhcHRpb25fYm90dG9tW2ldLmNsYXNzTmFtZSA9IFwibWNuQ2FwdGlvblRvcENvbnRlbnRcIjtcbiAgICAgICAgICAgICAgICAgICAgY2FwdGlvbl9pbWFnZV9jb250ZW50X3RvcCA9IG1lZGl0b3IuZ2V0U2V0dGluZ0NvbXBvbmVudCgpLmZpbmQoJy5tY25DYXB0aW9uQm90dG9tSW1hZ2VDb250ZW50Jyk7XG4gICAgICAgICAgICAgICAgICAgIGNhcHRpb25faW1hZ2VfY29udGVudF90b3BbMF0uY2xhc3NOYW1lID0gXCJtY25DYXB0aW9uVG9wSW1hZ2VDb250ZW50XCI7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgY2FwdGlvbl9ibG9ja19pbm5lclswXS5jaGlsZHJlblswXS5hbGlnbiA9IFwibGVmdFwiO1xuICAgICAgICAgICAgICAgIGlmIChjYXB0aW9uX2Jsb2NrX2lubmVyWzBdLmNoaWxkcmVuLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FwdGlvbl9ibG9ja19pbm5lclswXS5jaGlsZHJlblsxXS5hbGlnbiA9IFwicmlnaHRcIjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2FwdGlvbl90b3AgPSBtZWRpdG9yLmdldFNldHRpbmdDb21wb25lbnQoKS5maW5kKCcubWNuQ2FwdGlvblRvcENvbnRlbnQnKTtcbiAgICAgICAgICAgICAgICBjYXB0aW9uX2JvdHRvbSA9IG1lZGl0b3IuZ2V0U2V0dGluZ0NvbXBvbmVudCgpLmZpbmQoJy5tY25DYXB0aW9uQm90dG9tQ29udGVudCcpO1xuICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLnZhbHVlID09PSBcIkxlZnRcIikge1xuICAgICAgICAgICAgICAgIC8vbWNuQ2FwdGlvbkJsb2NrXG4gICAgICAgICAgICAgICAgJChcIi5tY25DYXB0aW9uVG9wQ29udGVudFwiKS5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgJHRoaXMgPSAkKHRoaXMpO1xuICAgICAgICAgICAgICAgICAgICB2YXIgbmV3cm93cyA9IFtdO1xuICAgICAgICAgICAgICAgICAgICAkdGhpcy5maW5kKFwidHJcIikuZWFjaChmdW5jdGlvbigpe1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGkgPSAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5maW5kKFwidGRcIikuZWFjaChmdW5jdGlvbigpe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGkrKztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZihuZXdyb3dzW2ldID09PSB1bmRlZmluZWQpIHsgbmV3cm93c1tpXSA9ICQoXCI8dHI+PC90cj5cIik7IH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXdyb3dzW2ldLmFwcGVuZCgkKHRoaXMpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgJHRoaXMuZmluZChcInRyXCIpLnJlbW92ZSgpO1xuICAgICAgICAgICAgICAgICAgICAkLmVhY2gobmV3cm93cywgZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICAgICAgICAgICR0aGlzLmFwcGVuZCh0aGlzKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAkKFwiLm1jbkNhcHRpb25Cb3R0b21Db250ZW50XCIpLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciAkdGhpcyA9ICQodGhpcyk7XG4gICAgICAgICAgICAgICAgICAgIHZhciBuZXdyb3dzID0gW107XG4gICAgICAgICAgICAgICAgICAgICR0aGlzLmZpbmQoXCJ0clwiKS5lYWNoKGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgaSA9IDA7XG4gICAgICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLmZpbmQoXCJ0ZFwiKS5lYWNoKGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaSsrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKG5ld3Jvd3NbaV0gPT09IHVuZGVmaW5lZCkgeyBuZXdyb3dzW2ldID0gJChcIjx0cj48L3RyPlwiKTsgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld3Jvd3NbaV0uYXBwZW5kKCQodGhpcykpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAkdGhpcy5maW5kKFwidHJcIikucmVtb3ZlKCk7XG4gICAgICAgICAgICAgICAgICAgICQuZWFjaChuZXdyb3dzLCBmdW5jdGlvbigpe1xuICAgICAgICAgICAgICAgICAgICAgICAgJHRoaXMuYXBwZW5kKHRoaXMpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICB9LFxuICAgIFxuICAgIHNob3dTZXR0aW5nRm9ybTogZnVuY3Rpb24gKGZvcm0sIGNvbXBvbmVudCwgbWVkaXRvcikge1xuICAgICAgICBsZXQgY2FwdGlvbl90b3AgPSBjb21wb25lbnQuZmluZCgnLm1jbkNhcHRpb25Ub3BDb250ZW50Jyk7XG4gICAgICAgIGxldCBjYXB0aW9uX2JvdHRvbSA9IGNvbXBvbmVudC5maW5kKCcubWNuQ2FwdGlvbkJvdHRvbUNvbnRlbnQnKTtcbiAgICAgICAgXG4gICAgICAgIGxldCBpbWFnZUNvdW50SW5Db21wb25lbnQgPSAwO1xuXG4gICAgICAgIGxldCBjYXB0aW9uUG9zaXRpb24gPSBmb3JtLmZpbmQoJy5jYXB0aW9uLXBvc2l0aW9uJyk7XG4gICAgICAgIGlmIChjYXB0aW9uX3RvcC5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBpbWFnZUNvdW50SW5Db21wb25lbnQgPSBjYXB0aW9uX3RvcC5sZW5ndGg7XG4gICAgICAgICAgICBjYXB0aW9uUG9zaXRpb24udmFsKFwiVG9wXCIpO1xuICAgICAgICB9IGVsc2UgaWYgKGNhcHRpb25fYm90dG9tLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIGltYWdlQ291bnRJbkNvbXBvbmVudCA9IGNhcHRpb25fYm90dG9tLmxlbmd0aDtcbiAgICAgICAgICAgIGNhcHRpb25Qb3NpdGlvbi52YWwoXCJCb3R0b21cIik7XG4gICAgICAgIH1cblxuICAgICAgICBsZXQgaW1hZ2VDb3VudCA9IGZvcm0uZmluZCgnLmltYWdlLWNvdW50Jyk7XG4gICAgICAgIGltYWdlQ291bnQudmFsKGltYWdlQ291bnRJbkNvbXBvbmVudCk7XG5cbiAgICB9LFxuXG4gICAgZ2V0Q29udGVudDogZnVuY3Rpb24gKGNvbXBvbmVudCwgbWVkaXRvcikge1xuICAgICAgICBsZXQgY29tcG9uZW50Q29udGVudCA9IGNvbXBvbmVudC5maW5kKCcubWVkaXRvci1jb21wb25lbnQtY29udGVudCcpO1xuICAgICAgICBsZXQgaWQgPSBjb21wb25lbnRDb250ZW50LmF0dHIoJ2lkJyk7XG4gICAgICAgIGxldCBlZGl0b3IgPSBpbnN0YW5jZXNbaWRdO1xuICAgICAgICBpZiAoZWRpdG9yKSB7XG4gICAgICAgICAgICByZXR1cm4gZWRpdG9yLmdldERhdGEoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBjb21wb25lbnRDb250ZW50Lmh0bWwoKTtcbiAgICAgICAgfVxuICAgIH0sXG4gICAgXG4gICAgZGVzdHJveTogZnVuY3Rpb24gKGNvbXBvbmVudCwgbWVkaXRvcikge1xuICAgICAgICBsZXQgaWQgPSBjb21wb25lbnQuZmluZCgnLm1lZGl0b3ItY29tcG9uZW50LWNvbnRlbnQnKS5hdHRyKCdpZCcpO1xuICAgICAgICBpbnN0YW5jZXNbaWRdICYmIGluc3RhbmNlc1tpZF0uZGVzdHJveSgpO1xuICAgIH1cbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/components/meditor-component-email-image-caption.js\n");

/***/ }),

/***/ "./src/components/meditor-component-photo.js":
/*!***************************************************!*\
  !*** ./src/components/meditor-component-photo.js ***!
  \***************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"jquery\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var meditor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! meditor */ \"meditor\");\n/* harmony import */ var meditor__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(meditor__WEBPACK_IMPORTED_MODULE_1__);\n\n\nmeditor__WEBPACK_IMPORTED_MODULE_1___default.a.components['photo'] = {\n  init: function init(contentArea, container, component, meditor) {\n    var componentContent = component.children('.meditor-component-content');\n    var img = componentContent.find('img');\n    img.css('display', 'inline-block');\n  },\n  settingEnabled: true,\n  settingTitle: 'Photo Settings',\n  initSettingForm: function initSettingForm(form, meditor) {\n    var self = this;\n    var options = meditor.options;\n    form.append('<form class=\"form-horizontal\">' + '   <div class=\"form-group\">' + '       <div class=\"col-sm-12\">' + '           <button type=\"button\" class=\"btn btn-block btn-primary\" id=\"photo-edit\">Change Photo</button>' + '           <input type=\"file\" style=\"display: none\" />' + '       </div>' + '   </div>' + '   <div class=\"form-group\">' + '       <div class=\"col-sm-12\">' + '           <center><b>OR</b></center>' + '       </div>' + '   </div>' + '   <div class=\"form-group\">' + '       <label for=\"photo-width\" class=\"col-sm-12\">URL</label>' + '       <div class=\"col-sm-12\">' + '           <input type=\"text\" id=\"photo-url\" class=\"form-control\" />' + '       </div>' + '   </div>' + '   <div class=\"form-group\">' + '       <label for=\"photo-align\" class=\"col-sm-12\">Align</label>' + '       <div class=\"col-sm-12\">' + '           <select id=\"photo-align\" class=\"form-control\">' + '               <option value=\"left\">Left</option>' + '               <option value=\"center\">Center</option>' + '               <option value=\"right\">Right</option>' + '           </select>' + '       </div>' + '   </div>' + '   <div class=\"form-group\">' + '       <label for=\"photo-style\" class=\"col-sm-12\">Style</label>' + '       <div class=\"col-sm-12\">' + '           <select id=\"photo-style\" class=\"form-control\">' + '               <option value=\"\">None</option>' + '               <option value=\"img-rounded\">Rounded</option>' + '               <option value=\"img-circle\">Circle</option>' + '               <option value=\"img-thumbnail\">Thumbnail</option>' + '           </select>' + '       </div>' + '   </div>' + '   <div class=\"form-group\">' + '       <label for=\"photo-width\" class=\"col-sm-12\">Width</label>' + '       <div class=\"col-sm-12\">' + '           <input type=\"number\" id=\"photo-width\" class=\"form-control\" />' + '       </div>' + '   </div>' + '   <div class=\"form-group\">' + '       <label for=\"photo-height\" class=\"col-sm-12\">Height</label>' + '       <div class=\"col-sm-12\">' + '           <input type=\"number\" id=\"photo-height\" class=\"form-control\" />' + '       </div>' + '   </div>' + '</form>');\n    var photoEdit = form.find('#photo-edit');\n    var fileInput = photoEdit.next();\n    photoEdit.on('click', function (e) {\n      e.preventDefault();\n      fileInput.trigger('click');\n    });\n    fileInput.on('change', function () {\n      var file = this.files[0];\n\n      if (/image/.test(file.type)) {\n        var reader = new FileReader();\n        reader.addEventListener('load', function (e) {\n          var img = meditor.getSettingComponent().find('img');\n          img.attr('src', e.target.result);\n          img.css({\n            width: '',\n            height: ''\n          });\n          img.load(function () {\n            meditor.showSettingPanel(meditor.getSettingComponent(), options);\n          });\n        });\n        reader.readAsDataURL(this.files[0]);\n      } else {\n        alert('Your selected file is not photo!');\n      }\n    });\n    var inputAlign = form.find('#photo-align');\n    inputAlign.on('change', function () {\n      var panel = meditor.getSettingComponent().find('.photo-panel');\n      panel.css('text-align', this.value);\n    });\n    var cbbStyle = form.find('#photo-style');\n    cbbStyle.on('change', function () {\n      var img = meditor.getSettingComponent().find('img');\n      var val = this.value;\n      img.removeClass('img-rounded img-circle img-thumbnail');\n\n      if (val) {\n        img.addClass(val);\n      }\n    });\n    var inputUrl = form.find('#photo-url');\n    inputUrl.on('change', function () {\n      var img = meditor.getSettingComponent().find('img');\n      img.attr('src', this.value);\n    });\n    var inputWidth = form.find('#photo-width');\n    var inputHeight = form.find('#photo-height');\n    inputWidth.on('change', function () {\n      var img = meditor.getSettingComponent().find('img');\n      var newWidth = +this.value;\n      var newHeight = Math.round(newWidth / self.ratio);\n\n      if (newWidth <= 0) {\n        newWidth = self.width;\n        newHeight = self.height;\n        this.value = newWidth;\n      }\n\n      img.css({\n        'width': newWidth,\n        'height': newHeight\n      });\n      inputHeight.val(newHeight);\n    });\n    inputHeight.on('change', function () {\n      var img = meditor.getSettingComponent().find('img');\n      var newHeight = +this.value;\n      var newWidth = Math.round(newHeight * self.ratio);\n\n      if (newHeight <= 0) {\n        newWidth = self.width;\n        newHeight = self.height;\n        this.value = newHeight;\n      }\n\n      img.css({\n        'height': newHeight,\n        'width': newWidth\n      });\n      inputWidth.val(newWidth);\n    });\n  },\n  showSettingForm: function showSettingForm(form, component, meditor) {\n    var self = this;\n    var inputAlign = form.find('#photo-align');\n    var inputWidth = form.find('#photo-width');\n    var inputUrl = form.find('#photo-url');\n    var inputHeight = form.find('#photo-height');\n    var cbbStyle = form.find('#photo-style');\n    var panel = component.find('.photo-panel');\n    var img = panel.find('img');\n    var algin = panel.css('text-align');\n\n    if (algin !== 'right' || algin !== 'center') {\n      algin = 'left';\n    }\n\n    if (img.hasClass('img-rounded')) {\n      cbbStyle.val('img-rounded');\n    } else if (img.hasClass('img-circle')) {\n      cbbStyle.val('img-circle');\n    } else if (img.hasClass('img-thumbnail')) {\n      cbbStyle.val('img-thumbnail');\n    } else {\n      cbbStyle.val('');\n    }\n\n    inputAlign.val(algin);\n    inputWidth.val(img.width());\n    inputHeight.val(img.height());\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()('<img />').attr('src', img.attr('src')).load(function () {\n      self.ratio = this.width / this.height;\n      self.width = this.width;\n      self.height = this.height;\n    });\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/meditor-component-photo.js\n");

/***/ }),

/***/ "./src/components/meditor-component-text.js":
/*!**************************************************!*\
  !*** ./src/components/meditor-component-text.js ***!
  \**************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _styles_meditor_component_text_less__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../styles/meditor-component-text.less */ \"./src/styles/meditor-component-text.less\");\n/* harmony import */ var _styles_meditor_component_text_less__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_styles_meditor_component_text_less__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var meditor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! meditor */ \"meditor\");\n/* harmony import */ var meditor__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(meditor__WEBPACK_IMPORTED_MODULE_1__);\n\n\nvar instances = {}; // Text component\n// ---------------------------------------------------------------------\n\nmeditor__WEBPACK_IMPORTED_MODULE_1___default.a.components['text'] = {\n  options: {\n    toolbarGroups: [{\n      name: 'document',\n      groups: ['mode', 'document', 'doctools']\n    }, {\n      name: 'editing',\n      groups: ['find', 'selection', 'spellchecker', 'editing']\n    }, {\n      name: 'basicstyles',\n      groups: ['basicstyles', 'cleanup']\n    }, {\n      name: 'paragraph',\n      groups: ['list', 'indent', 'blocks', 'align', 'bidi', 'paragraph']\n    }, {\n      name: 'links',\n      groups: ['links']\n    }, {\n      name: 'insert',\n      groups: ['insert']\n    }, {\n      name: 'clipboard',\n      groups: ['clipboard', 'undo']\n    }, {\n      name: 'styles',\n      groups: ['styles']\n    }, {\n      name: 'colors',\n      groups: ['colors']\n    }],\n    title: false,\n    allowedContent: true,\n    // DISABLES Advanced Content Filter. This is so templates with classes: allowed through\n    bodyId: 'editor',\n    templates_replaceContent: false,\n    enterMode: 'P',\n    forceEnterMode: true,\n    format_tags: 'p;h1;h2;h3;h4;h5;h6',\n    removePlugins: 'table,magicline,tableselection,tabletools,div',\n    removeButtons: 'Save,NewPage,Preview,Print,Templates,PasteText,PasteFromWord,Find,Replace,SelectAll,Scayt,Form,HiddenField,ImageButton,Button,Select,Textarea,TextField,Radio,Checkbox,Outdent,Indent,Blockquote,CreateDiv,Language,Table,HorizontalRule,Smiley,SpecialChar,PageBreak,Iframe,Styles,BGColor,Maximize,About,ShowBlocks,BidiLtr,BidiRtl,Flash,Image,Subscript,Superscript,Anchor',\n    minimumChangeMilliseconds: 100\n  },\n  initCKEditor: function initCKEditor(meditor, callback) {\n    if (meditor.iframeWindow.CKEDITOR) {\n      callback(meditor.iframeWindow.CKEDITOR);\n    } else {\n      var ckeditorSrc = $(document.body).find('[data-type=\"ckeditor-script\"]').attr('src');\n      var ckeditorScript = meditor.iframeDoc[0].createElement('script');\n      ckeditorScript.type = 'text/javascript';\n      ckeditorScript.src = ckeditorSrc;\n\n      ckeditorScript.onreadystatechange = function () {\n        meditor.iframeWindow.CKEDITOR.disableAutoInline = true;\n        callback(meditor.iframeWindow.CKEDITOR);\n      };\n\n      ckeditorScript.onload = function () {\n        meditor.iframeWindow.CKEDITOR.disableAutoInline = true;\n        callback(meditor.iframeWindow.CKEDITOR);\n      };\n\n      meditor.iframeHead.append(ckeditorScript);\n      setTimeout(function () {\n        ckeditorScript.src = ckeditorSrc;\n      }, 500);\n    }\n  },\n  init: function init(contentArea, container, component, meditor) {\n    var self = this;\n    var options = meditor.options;\n    var componentContent = component.children('.meditor-component-content');\n    componentContent.prop('contenteditable', true);\n    componentContent.on('input', function (e) {\n      if (typeof options.onComponentChanged === 'function') {\n        options.onComponentChanged.call(contentArea, e, component);\n      }\n\n      if (typeof options.onContainerChanged === 'function') {\n        options.onContainerChanged.call(contentArea, e, container);\n      }\n\n      if (typeof options.onContentChanged === 'function') {\n        options.onContentChanged.call(meditor, e, contentArea);\n      }\n    });\n    self.initCKEditor(meditor, function (ckeditor) {\n      var editor = ckeditor.inline(componentContent[0], self.options);\n      instances[componentContent.attr('id')] = editor;\n      editor.on('instanceReady', function () {\n        if (typeof options.onComponentReady === 'function') {\n          options.onComponentReady.call(contentArea, component, editor);\n        }\n      });\n    });\n  },\n  getContent: function getContent(component, meditor) {\n    var componentContent = component.find('.meditor-component-content');\n    var id = componentContent.attr('id');\n    var editor = instances[id];\n\n    if (editor) {\n      return editor.getData();\n    } else {\n      return componentContent.html();\n    }\n  },\n  destroy: function destroy(component, meditor) {\n    var id = component.find('.meditor-component-content').attr('id');\n    instances[id] && instances[id].destroy();\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/meditor-component-text.js\n");

/***/ }),

/***/ "./src/styles/meditor-component-text.less":
/*!************************************************!*\
  !*** ./src/styles/meditor-component-text.less ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGVzL21lZGl0b3ItY29tcG9uZW50LXRleHQubGVzcz8zZGNhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6Ii4vc3JjL3N0eWxlcy9tZWRpdG9yLWNvbXBvbmVudC10ZXh0Lmxlc3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/styles/meditor-component-text.less\n");

/***/ }),

/***/ "jquery":
/*!*************************!*\
  !*** external "jQuery" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_jquery__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJqUXVlcnlcIj9jZDBjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6ImpxdWVyeS5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV9qcXVlcnlfXzsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///jquery\n");

/***/ }),

/***/ "meditor":
/*!**************************!*\
  !*** external "MEditor" ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_meditor__;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJNRWRpdG9yXCI/MzQyNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiJtZWRpdG9yLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX21lZGl0b3JfXzsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///meditor\n");

/***/ })

/******/ });
});
